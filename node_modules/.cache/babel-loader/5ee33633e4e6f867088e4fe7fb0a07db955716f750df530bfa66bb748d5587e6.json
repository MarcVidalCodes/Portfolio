{"ast":null,"code":"'use client';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useMemo, useRef } from 'react';\nimport makeCancellable from 'make-cancellable-promise';\nimport clsx from 'clsx';\nimport invariant from 'tiny-invariant';\nimport warning from 'warning';\nimport * as pdfjs from 'pdfjs-dist';\nimport useDocumentContext from '../shared/hooks/useDocumentContext.js';\nimport usePageContext from '../shared/hooks/usePageContext.js';\nimport useResolver from '../shared/hooks/useResolver.js';\nimport { cancelRunningTask } from '../shared/utils.js';\nexport default function AnnotationLayer() {\n  const documentContext = useDocumentContext();\n  const pageContext = usePageContext();\n  invariant(pageContext, 'Unable to find Page context.');\n  const mergedProps = Object.assign(Object.assign({}, documentContext), pageContext);\n  const {\n    imageResourcesPath,\n    linkService,\n    onGetAnnotationsError: onGetAnnotationsErrorProps,\n    onGetAnnotationsSuccess: onGetAnnotationsSuccessProps,\n    onRenderAnnotationLayerError: onRenderAnnotationLayerErrorProps,\n    onRenderAnnotationLayerSuccess: onRenderAnnotationLayerSuccessProps,\n    page,\n    pdf,\n    renderForms,\n    rotate,\n    scale = 1\n  } = mergedProps;\n  invariant(pdf, 'Attempted to load page annotations, but no document was specified. Wrap <Page /> in a <Document /> or pass explicit `pdf` prop.');\n  invariant(page, 'Attempted to load page annotations, but no page was specified.');\n  invariant(linkService, 'Attempted to load page annotations, but no linkService was specified.');\n  const [annotationsState, annotationsDispatch] = useResolver();\n  const {\n    value: annotations,\n    error: annotationsError\n  } = annotationsState;\n  const layerElement = useRef(null);\n  warning(Number.parseInt(window.getComputedStyle(document.body).getPropertyValue('--react-pdf-annotation-layer'), 10) === 1, 'AnnotationLayer styles not found. Read more: https://github.com/wojtekmaj/react-pdf#support-for-annotations');\n  function onLoadSuccess() {\n    if (!annotations) {\n      // Impossible, but TypeScript doesn't know that\n      return;\n    }\n    if (onGetAnnotationsSuccessProps) {\n      onGetAnnotationsSuccessProps(annotations);\n    }\n  }\n  function onLoadError() {\n    if (!annotationsError) {\n      // Impossible, but TypeScript doesn't know that\n      return;\n    }\n    warning(false, annotationsError.toString());\n    if (onGetAnnotationsErrorProps) {\n      onGetAnnotationsErrorProps(annotationsError);\n    }\n  }\n  // biome-ignore lint/correctness/useExhaustiveDependencies: useEffect intentionally triggered on page change\n  useEffect(function resetAnnotations() {\n    annotationsDispatch({\n      type: 'RESET'\n    });\n  }, [annotationsDispatch, page]);\n  useEffect(function loadAnnotations() {\n    if (!page) {\n      return;\n    }\n    const cancellable = makeCancellable(page.getAnnotations());\n    const runningTask = cancellable;\n    cancellable.promise.then(nextAnnotations => {\n      annotationsDispatch({\n        type: 'RESOLVE',\n        value: nextAnnotations\n      });\n    }).catch(error => {\n      annotationsDispatch({\n        type: 'REJECT',\n        error\n      });\n    });\n    return () => {\n      cancelRunningTask(runningTask);\n    };\n  }, [annotationsDispatch, page]);\n  // biome-ignore lint/correctness/useExhaustiveDependencies: Ommitted callbacks so they are not called every time they change\n  useEffect(() => {\n    if (annotations === undefined) {\n      return;\n    }\n    if (annotations === false) {\n      onLoadError();\n      return;\n    }\n    onLoadSuccess();\n  }, [annotations]);\n  function onRenderSuccess() {\n    if (onRenderAnnotationLayerSuccessProps) {\n      onRenderAnnotationLayerSuccessProps();\n    }\n  }\n  function onRenderError(error) {\n    warning(false, `${error}`);\n    if (onRenderAnnotationLayerErrorProps) {\n      onRenderAnnotationLayerErrorProps(error);\n    }\n  }\n  const viewport = useMemo(() => page.getViewport({\n    scale,\n    rotation: rotate\n  }), [page, rotate, scale]);\n  // biome-ignore lint/correctness/useExhaustiveDependencies: Ommitted callbacks so they are not called every time they change\n  useEffect(function renderAnnotationLayer() {\n    if (!pdf || !page || !linkService || !annotations) {\n      return;\n    }\n    const {\n      current: layer\n    } = layerElement;\n    if (!layer) {\n      return;\n    }\n    const clonedViewport = viewport.clone({\n      dontFlip: true\n    });\n    const annotationLayerParameters = {\n      accessibilityManager: null,\n      // TODO: Implement this\n      annotationCanvasMap: null,\n      // TODO: Implement this\n      annotationEditorUIManager: null,\n      // TODO: Implement this\n      div: layer,\n      l10n: null,\n      // TODO: Implement this\n      page,\n      structTreeLayer: null,\n      // TODO: Implement this\n      viewport: clonedViewport\n    };\n    const renderParameters = {\n      annotations,\n      annotationStorage: pdf.annotationStorage,\n      div: layer,\n      imageResourcesPath,\n      linkService,\n      page,\n      renderForms,\n      viewport: clonedViewport\n    };\n    layer.innerHTML = '';\n    try {\n      new pdfjs.AnnotationLayer(annotationLayerParameters).render(renderParameters);\n      // Intentional immediate callback\n      onRenderSuccess();\n    } catch (error) {\n      onRenderError(error);\n    }\n    return () => {\n      // TODO: Cancel running task?\n    };\n  }, [annotations, imageResourcesPath, linkService, page, pdf, renderForms, viewport]);\n  return _jsx(\"div\", {\n    className: clsx('react-pdf__Page__annotations', 'annotationLayer'),\n    ref: layerElement\n  });\n}","map":{"version":3,"names":["jsx","_jsx","useEffect","useMemo","useRef","makeCancellable","clsx","invariant","warning","pdfjs","useDocumentContext","usePageContext","useResolver","cancelRunningTask","AnnotationLayer","documentContext","pageContext","mergedProps","Object","assign","imageResourcesPath","linkService","onGetAnnotationsError","onGetAnnotationsErrorProps","onGetAnnotationsSuccess","onGetAnnotationsSuccessProps","onRenderAnnotationLayerError","onRenderAnnotationLayerErrorProps","onRenderAnnotationLayerSuccess","onRenderAnnotationLayerSuccessProps","page","pdf","renderForms","rotate","scale","annotationsState","annotationsDispatch","value","annotations","error","annotationsError","layerElement","Number","parseInt","window","getComputedStyle","document","body","getPropertyValue","onLoadSuccess","onLoadError","toString","resetAnnotations","type","loadAnnotations","cancellable","getAnnotations","runningTask","promise","then","nextAnnotations","catch","undefined","onRenderSuccess","onRenderError","viewport","getViewport","rotation","renderAnnotationLayer","current","layer","clonedViewport","clone","dontFlip","annotationLayerParameters","accessibilityManager","annotationCanvasMap","annotationEditorUIManager","div","l10n","structTreeLayer","renderParameters","annotationStorage","innerHTML","render","className","ref"],"sources":["/Users/marcvidal/Documents/Code/Portfolio/node_modules/react-pdf/dist/esm/Page/AnnotationLayer.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useMemo, useRef } from 'react';\nimport makeCancellable from 'make-cancellable-promise';\nimport clsx from 'clsx';\nimport invariant from 'tiny-invariant';\nimport warning from 'warning';\nimport * as pdfjs from 'pdfjs-dist';\nimport useDocumentContext from '../shared/hooks/useDocumentContext.js';\nimport usePageContext from '../shared/hooks/usePageContext.js';\nimport useResolver from '../shared/hooks/useResolver.js';\nimport { cancelRunningTask } from '../shared/utils.js';\nexport default function AnnotationLayer() {\n    const documentContext = useDocumentContext();\n    const pageContext = usePageContext();\n    invariant(pageContext, 'Unable to find Page context.');\n    const mergedProps = Object.assign(Object.assign({}, documentContext), pageContext);\n    const { imageResourcesPath, linkService, onGetAnnotationsError: onGetAnnotationsErrorProps, onGetAnnotationsSuccess: onGetAnnotationsSuccessProps, onRenderAnnotationLayerError: onRenderAnnotationLayerErrorProps, onRenderAnnotationLayerSuccess: onRenderAnnotationLayerSuccessProps, page, pdf, renderForms, rotate, scale = 1, } = mergedProps;\n    invariant(pdf, 'Attempted to load page annotations, but no document was specified. Wrap <Page /> in a <Document /> or pass explicit `pdf` prop.');\n    invariant(page, 'Attempted to load page annotations, but no page was specified.');\n    invariant(linkService, 'Attempted to load page annotations, but no linkService was specified.');\n    const [annotationsState, annotationsDispatch] = useResolver();\n    const { value: annotations, error: annotationsError } = annotationsState;\n    const layerElement = useRef(null);\n    warning(Number.parseInt(window.getComputedStyle(document.body).getPropertyValue('--react-pdf-annotation-layer'), 10) === 1, 'AnnotationLayer styles not found. Read more: https://github.com/wojtekmaj/react-pdf#support-for-annotations');\n    function onLoadSuccess() {\n        if (!annotations) {\n            // Impossible, but TypeScript doesn't know that\n            return;\n        }\n        if (onGetAnnotationsSuccessProps) {\n            onGetAnnotationsSuccessProps(annotations);\n        }\n    }\n    function onLoadError() {\n        if (!annotationsError) {\n            // Impossible, but TypeScript doesn't know that\n            return;\n        }\n        warning(false, annotationsError.toString());\n        if (onGetAnnotationsErrorProps) {\n            onGetAnnotationsErrorProps(annotationsError);\n        }\n    }\n    // biome-ignore lint/correctness/useExhaustiveDependencies: useEffect intentionally triggered on page change\n    useEffect(function resetAnnotations() {\n        annotationsDispatch({ type: 'RESET' });\n    }, [annotationsDispatch, page]);\n    useEffect(function loadAnnotations() {\n        if (!page) {\n            return;\n        }\n        const cancellable = makeCancellable(page.getAnnotations());\n        const runningTask = cancellable;\n        cancellable.promise\n            .then((nextAnnotations) => {\n            annotationsDispatch({ type: 'RESOLVE', value: nextAnnotations });\n        })\n            .catch((error) => {\n            annotationsDispatch({ type: 'REJECT', error });\n        });\n        return () => {\n            cancelRunningTask(runningTask);\n        };\n    }, [annotationsDispatch, page]);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: Ommitted callbacks so they are not called every time they change\n    useEffect(() => {\n        if (annotations === undefined) {\n            return;\n        }\n        if (annotations === false) {\n            onLoadError();\n            return;\n        }\n        onLoadSuccess();\n    }, [annotations]);\n    function onRenderSuccess() {\n        if (onRenderAnnotationLayerSuccessProps) {\n            onRenderAnnotationLayerSuccessProps();\n        }\n    }\n    function onRenderError(error) {\n        warning(false, `${error}`);\n        if (onRenderAnnotationLayerErrorProps) {\n            onRenderAnnotationLayerErrorProps(error);\n        }\n    }\n    const viewport = useMemo(() => page.getViewport({ scale, rotation: rotate }), [page, rotate, scale]);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: Ommitted callbacks so they are not called every time they change\n    useEffect(function renderAnnotationLayer() {\n        if (!pdf || !page || !linkService || !annotations) {\n            return;\n        }\n        const { current: layer } = layerElement;\n        if (!layer) {\n            return;\n        }\n        const clonedViewport = viewport.clone({ dontFlip: true });\n        const annotationLayerParameters = {\n            accessibilityManager: null, // TODO: Implement this\n            annotationCanvasMap: null, // TODO: Implement this\n            annotationEditorUIManager: null, // TODO: Implement this\n            div: layer,\n            l10n: null, // TODO: Implement this\n            page,\n            structTreeLayer: null, // TODO: Implement this\n            viewport: clonedViewport,\n        };\n        const renderParameters = {\n            annotations,\n            annotationStorage: pdf.annotationStorage,\n            div: layer,\n            imageResourcesPath,\n            linkService,\n            page,\n            renderForms,\n            viewport: clonedViewport,\n        };\n        layer.innerHTML = '';\n        try {\n            new pdfjs.AnnotationLayer(annotationLayerParameters).render(renderParameters);\n            // Intentional immediate callback\n            onRenderSuccess();\n        }\n        catch (error) {\n            onRenderError(error);\n        }\n        return () => {\n            // TODO: Cancel running task?\n        };\n    }, [annotations, imageResourcesPath, linkService, page, pdf, renderForms, viewport]);\n    return (_jsx(\"div\", { className: clsx('react-pdf__Page__annotations', 'annotationLayer'), ref: layerElement }));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}