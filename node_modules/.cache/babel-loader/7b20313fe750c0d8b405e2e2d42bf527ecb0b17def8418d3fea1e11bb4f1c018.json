{"ast":null,"code":"var _jsxFileName = \"/Users/marcvidal/Documents/Code/Portfolio/src/components/projects/TagRoyale.js\";\nimport React from 'react';\nimport Project from '../portfolio/Project';\nimport ProjectText from '../portfolio/ProjectText';\nimport ProjectPreview from '../portfolio/ProjectPreview';\nimport cu1 from '../../assets/images/portfolio/cu1.jpg';\nimport cu2 from '../../assets/images/portfolio/cu2.jpg';\nimport cu3 from '../../assets/images/portfolio/cu3.jpg';\nimport cu4 from '../../assets/images/portfolio/cu4.jpg';\nimport cu5 from '../../assets/images/portfolio/cu5.jpg';\nimport cu6 from '../../assets/images/portfolio/cu6.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TagRoyale() {\n  return /*#__PURE__*/_jsxDEV(Project, {\n    children: [/*#__PURE__*/_jsxDEV(ProjectText, {\n      title: \"TagRoyale\",\n      technologies: \"React Native, TypeScript, Express, Socket.io WebSockets, Geolocation API, React Navigation\",\n      description: `TagRoyale is a location-based mobile game that transforms traditional tag into an immersive battle royale experience. Players join a virtual lobby, enter a designated play area, and compete in real-time using their smartphones as tracking devices. The app uses GPS to monitor player positions, automatically detects when a \"tag\" occurs based on proximity, and provides real-time updates on game status.\n\nFeatures include real-time player tracking on an interactive map, geographical facts about the playing location powered by Wolfram Alpha, automated tag detection using geolocation, in-game timer, a shrinking safezone/boundary, multiplayer gameplay, and customizable game settings.\n\nMy team and I won best crossover hack at CuHacking, where I primarily worked on backend development. I developed a real-time location-based multiplayer system using Socket.io WebSockets with automatic reconnection handling and optimized location updates at 2-second intervals. I also built fault-tolerant networking with aggressive reconnection strategies and host migration to maintain game integrity even when players disconnect.`,\n      devpostLink: \"https://devpost.com/software/tag-royale\",\n      githubLink: \"https://github.com/MarcVidalCodes/CIBCParentWebApp.git\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: cu1,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: cu2,\n        width: \"40%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: cu3,\n        width: \"40%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: cu4,\n        width: \"40%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: cu5,\n        width: \"40%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: cu6,\n        width: \"40%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = TagRoyale;\nexport default TagRoyale;\nvar _c;\n$RefreshReg$(_c, \"TagRoyale\");","map":{"version":3,"names":["React","Project","ProjectText","ProjectPreview","cu1","cu2","cu3","cu4","cu5","cu6","jsxDEV","_jsxDEV","TagRoyale","children","title","technologies","description","devpostLink","githubLink","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","flexWrap","src","width","_c","$RefreshReg$"],"sources":["/Users/marcvidal/Documents/Code/Portfolio/src/components/projects/TagRoyale.js"],"sourcesContent":["import React from 'react';\nimport Project from '../portfolio/Project';\nimport ProjectText from '../portfolio/ProjectText';\nimport ProjectPreview from '../portfolio/ProjectPreview';\nimport cu1 from '../../assets/images/portfolio/cu1.jpg';\nimport cu2 from '../../assets/images/portfolio/cu2.jpg';\nimport cu3 from '../../assets/images/portfolio/cu3.jpg';\nimport cu4 from '../../assets/images/portfolio/cu4.jpg';\nimport cu5 from '../../assets/images/portfolio/cu5.jpg';\nimport cu6 from '../../assets/images/portfolio/cu6.jpg';\n\nfunction TagRoyale() {\n    return (\n        <Project>\n            <ProjectText\n                title=\"TagRoyale\"\n                technologies=\"React Native, TypeScript, Express, Socket.io WebSockets, Geolocation API, React Navigation\"\n                description={`TagRoyale is a location-based mobile game that transforms traditional tag into an immersive battle royale experience. Players join a virtual lobby, enter a designated play area, and compete in real-time using their smartphones as tracking devices. The app uses GPS to monitor player positions, automatically detects when a \"tag\" occurs based on proximity, and provides real-time updates on game status.\n\nFeatures include real-time player tracking on an interactive map, geographical facts about the playing location powered by Wolfram Alpha, automated tag detection using geolocation, in-game timer, a shrinking safezone/boundary, multiplayer gameplay, and customizable game settings.\n\nMy team and I won best crossover hack at CuHacking, where I primarily worked on backend development. I developed a real-time location-based multiplayer system using Socket.io WebSockets with automatic reconnection handling and optimized location updates at 2-second intervals. I also built fault-tolerant networking with aggressive reconnection strategies and host migration to maintain game integrity even when players disconnect.`}\n                devpostLink=\"https://devpost.com/software/tag-royale\"\n                githubLink=\"https://github.com/MarcVidalCodes/CIBCParentWebApp.git\"\n            />\n            <div style={{ display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap' }}>\n                <ProjectPreview src={cu1} width=\"100%\" />\n                <ProjectPreview src={cu2} width=\"40%\" />\n                <ProjectPreview src={cu3} width=\"40%\" />\n                <ProjectPreview src={cu4} width=\"40%\" />\n                <ProjectPreview src={cu5} width=\"40%\" />\n                <ProjectPreview src={cu6} width=\"40%\" />\n            </div>\n        </Project>\n    );\n}\n\nexport default TagRoyale;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,GAAG,MAAM,uCAAuC;AACvD,OAAOC,GAAG,MAAM,uCAAuC;AACvD,OAAOC,GAAG,MAAM,uCAAuC;AACvD,OAAOC,GAAG,MAAM,uCAAuC;AACvD,OAAOC,GAAG,MAAM,uCAAuC;AACvD,OAAOC,GAAG,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,SAASA,CAAA,EAAG;EACjB,oBACID,OAAA,CAACV,OAAO;IAAAY,QAAA,gBACJF,OAAA,CAACT,WAAW;MACRY,KAAK,EAAC,WAAW;MACjBC,YAAY,EAAC,4FAA4F;MACzGC,WAAW,EAAG;AAC9B;AACA;AACA;AACA,gbAAib;MACjaC,WAAW,EAAC,yCAAyC;MACrDC,UAAU,EAAC;IAAwD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eACFX,OAAA;MAAKY,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,cAAc;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAb,QAAA,gBAC9EF,OAAA,CAACR,cAAc;QAACwB,GAAG,EAAEvB,GAAI;QAACwB,KAAK,EAAC;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCX,OAAA,CAACR,cAAc;QAACwB,GAAG,EAAEtB,GAAI;QAACuB,KAAK,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCX,OAAA,CAACR,cAAc;QAACwB,GAAG,EAAErB,GAAI;QAACsB,KAAK,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCX,OAAA,CAACR,cAAc;QAACwB,GAAG,EAAEpB,GAAI;QAACqB,KAAK,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCX,OAAA,CAACR,cAAc;QAACwB,GAAG,EAAEnB,GAAI;QAACoB,KAAK,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCX,OAAA,CAACR,cAAc;QAACwB,GAAG,EAAElB,GAAI;QAACmB,KAAK,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB;AAACO,EAAA,GAxBQjB,SAAS;AA0BlB,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}