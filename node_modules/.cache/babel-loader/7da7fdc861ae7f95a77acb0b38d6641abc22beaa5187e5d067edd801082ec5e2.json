{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useMemo } from 'react';\nimport { getAttributes, isStructTreeNode, isStructTreeNodeWithOnlyContentChild } from './shared/structTreeUtils.js';\nexport default function StructTreeItem(_ref) {\n  let {\n    className,\n    node\n  } = _ref;\n  const attributes = useMemo(() => getAttributes(node), [node]);\n  const children = useMemo(() => {\n    if (!isStructTreeNode(node)) {\n      return null;\n    }\n    if (isStructTreeNodeWithOnlyContentChild(node)) {\n      return null;\n    }\n    return node.children.map((child, index) => {\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        _jsx(StructTreeItem, {\n          node: child\n        }, index)\n      );\n    });\n  }, [node]);\n  return _jsx(\"span\", Object.assign({\n    className: className\n  }, attributes, {\n    children: children\n  }));\n}","map":{"version":3,"names":["jsx","_jsx","useMemo","getAttributes","isStructTreeNode","isStructTreeNodeWithOnlyContentChild","StructTreeItem","_ref","className","node","attributes","children","map","child","index","Object","assign"],"sources":["/Users/marcvidal/Documents/Code/test/portfolio/node_modules/react-pdf/dist/esm/StructTreeItem.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useMemo } from 'react';\nimport { getAttributes, isStructTreeNode, isStructTreeNodeWithOnlyContentChild, } from './shared/structTreeUtils.js';\nexport default function StructTreeItem({ className, node }) {\n    const attributes = useMemo(() => getAttributes(node), [node]);\n    const children = useMemo(() => {\n        if (!isStructTreeNode(node)) {\n            return null;\n        }\n        if (isStructTreeNodeWithOnlyContentChild(node)) {\n            return null;\n        }\n        return node.children.map((child, index) => {\n            return (\n            // eslint-disable-next-line react/no-array-index-key\n            _jsx(StructTreeItem, { node: child }, index));\n        });\n    }, [node]);\n    return (_jsx(\"span\", Object.assign({ className: className }, attributes, { children: children })));\n}\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,aAAa,EAAEC,gBAAgB,EAAEC,oCAAoC,QAAS,6BAA6B;AACpH,eAAe,SAASC,cAAcA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACtD,MAAMG,UAAU,GAAGR,OAAO,CAAC,MAAMC,aAAa,CAACM,IAAI,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAC7D,MAAME,QAAQ,GAAGT,OAAO,CAAC,MAAM;IAC3B,IAAI,CAACE,gBAAgB,CAACK,IAAI,CAAC,EAAE;MACzB,OAAO,IAAI;IACf;IACA,IAAIJ,oCAAoC,CAACI,IAAI,CAAC,EAAE;MAC5C,OAAO,IAAI;IACf;IACA,OAAOA,IAAI,CAACE,QAAQ,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MACvC;QACA;QACAb,IAAI,CAACK,cAAc,EAAE;UAAEG,IAAI,EAAEI;QAAM,CAAC,EAAEC,KAAK;MAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EACV,OAAQR,IAAI,CAAC,MAAM,EAAEc,MAAM,CAACC,MAAM,CAAC;IAAER,SAAS,EAAEA;EAAU,CAAC,EAAEE,UAAU,EAAE;IAAEC,QAAQ,EAAEA;EAAS,CAAC,CAAC,CAAC;AACrG"},"metadata":{},"sourceType":"module","externalDependencies":[]}