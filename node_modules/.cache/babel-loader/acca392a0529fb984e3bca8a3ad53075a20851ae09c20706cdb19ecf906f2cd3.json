{"ast":null,"code":"var _jsxFileName = \"/Users/marcvidal/Documents/Code/Portfolio/src/components/projects/TerraSphere.js\";\nimport React from 'react';\nimport Project from '../portfolio/Project';\nimport ProjectText from '../portfolio/ProjectText';\nimport ProjectPreview from '../portfolio/ProjectPreview';\nimport ter1 from '../../assets/images/portfolio/ter1.png';\nimport ter2 from '../../assets/images/portfolio/ter2.jpeg';\nimport ter3 from '../../assets/images/portfolio/ter3.PNG';\nimport ter4 from '../../assets/images/portfolio/ter4.jpeg';\nimport ter5 from '../../assets/images/portfolio/ter5.jpeg';\nimport ter6 from '../../assets/images/portfolio/ter6.jpeg';\nimport ter7 from '../../assets/images/portfolio/ter7.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TerraSphere() {\n  return /*#__PURE__*/_jsxDEV(Project, {\n    children: [/*#__PURE__*/_jsxDEV(ProjectText, {\n      title: \"TerraSphere\",\n      technologies: \"React Native, Redux Toolkit, OPENAI Camera Vision API, Google Maps API, Tailwind CSS\",\n      description: `A project submitted to Terrahacks. TerraSphere encourages users to live an eco-friendly and sustainable lifestyle by rewarding users with points when they take photos of eco-friendly activities. Gain a streak when snapping pics multiple days in a row, which multiplies your score, further incentivizing users to be sustainable every day. Redeem points for cool eco-related rewards!\n                \nI personally worked on all parts of the project, helping on every screen in the application. I worked on both API calls as well as well as the points and streak system. I implemented openAI's computer vision seamlessly into our project, creating custom prompts to achieve the point system. I worked with redux toolkit to easily set global state of variables with the Google Maps API. Lastly, I worked on the overall structure of the app as well.`,\n      devpostLink: \"https://devpost.com/software/terrasphere?ref_content=user-portfolio&ref_feature=in_progress\",\n      githubLink: \"https://github.com/MarcVidalCodes/CIBCParentWebApp.git\",\n      youtubeLink: \"https://www.youtube.com/watch?v=CMnOMxY9jDQ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: ter1,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: ter4,\n        width: \"40%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: ter3,\n        width: \"40%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: ter2,\n        width: \"40%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: ter5,\n        width: \"40%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: ter7,\n        width: \"40%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectPreview, {\n        src: ter6,\n        width: \"40%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = TerraSphere;\nexport default TerraSphere;\nvar _c;\n$RefreshReg$(_c, \"TerraSphere\");","map":{"version":3,"names":["React","Project","ProjectText","ProjectPreview","ter1","ter2","ter3","ter4","ter5","ter6","ter7","jsxDEV","_jsxDEV","TerraSphere","children","title","technologies","description","devpostLink","githubLink","youtubeLink","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","flexWrap","src","width","_c","$RefreshReg$"],"sources":["/Users/marcvidal/Documents/Code/Portfolio/src/components/projects/TerraSphere.js"],"sourcesContent":["import React from 'react';\nimport Project from '../portfolio/Project';\nimport ProjectText from '../portfolio/ProjectText';\nimport ProjectPreview from '../portfolio/ProjectPreview';\nimport ter1 from '../../assets/images/portfolio/ter1.png';\nimport ter2 from '../../assets/images/portfolio/ter2.jpeg';\nimport ter3 from '../../assets/images/portfolio/ter3.PNG';\nimport ter4 from '../../assets/images/portfolio/ter4.jpeg';\nimport ter5 from '../../assets/images/portfolio/ter5.jpeg';\nimport ter6 from '../../assets/images/portfolio/ter6.jpeg';\nimport ter7 from '../../assets/images/portfolio/ter7.jpeg';\n\nfunction TerraSphere() {\n    return (\n        <Project>\n            <ProjectText\n                title=\"TerraSphere\"\n                technologies=\"React Native, Redux Toolkit, OPENAI Camera Vision API, Google Maps API, Tailwind CSS\"\n                description={`A project submitted to Terrahacks. TerraSphere encourages users to live an eco-friendly and sustainable lifestyle by rewarding users with points when they take photos of eco-friendly activities. Gain a streak when snapping pics multiple days in a row, which multiplies your score, further incentivizing users to be sustainable every day. Redeem points for cool eco-related rewards!\n                \nI personally worked on all parts of the project, helping on every screen in the application. I worked on both API calls as well as well as the points and streak system. I implemented openAI's computer vision seamlessly into our project, creating custom prompts to achieve the point system. I worked with redux toolkit to easily set global state of variables with the Google Maps API. Lastly, I worked on the overall structure of the app as well.`}\n                devpostLink=\"https://devpost.com/software/terrasphere?ref_content=user-portfolio&ref_feature=in_progress\"\n                githubLink=\"https://github.com/MarcVidalCodes/CIBCParentWebApp.git\"\n                youtubeLink=\"https://www.youtube.com/watch?v=CMnOMxY9jDQ\"\n            />\n            <div style={{ display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap' }}>\n                <ProjectPreview src={ter1} width=\"100%\" />\n                <ProjectPreview src={ter4} width=\"40%\" />\n                <ProjectPreview src={ter3} width=\"40%\" />\n                <ProjectPreview src={ter2} width=\"40%\" />\n                <ProjectPreview src={ter5} width=\"40%\" />\n                <ProjectPreview src={ter7} width=\"40%\" />\n                <ProjectPreview src={ter6} width=\"40%\" />\n            </div>\n        </Project>\n    );\n}\n\nexport default TerraSphere;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,IAAI,MAAM,wCAAwC;AACzD,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,IAAI,MAAM,wCAAwC;AACzD,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,IAAI,MAAM,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,WAAWA,CAAA,EAAG;EACnB,oBACID,OAAA,CAACX,OAAO;IAAAa,QAAA,gBACJF,OAAA,CAACV,WAAW;MACRa,KAAK,EAAC,aAAa;MACnBC,YAAY,EAAC,sFAAsF;MACnGC,WAAW,EAAG;AAC9B;AACA,8bAA+b;MAC/aC,WAAW,EAAC,6FAA6F;MACzGC,UAAU,EAAC,wDAAwD;MACnEC,WAAW,EAAC;IAA6C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACFZ,OAAA;MAAKa,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,cAAc;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAd,QAAA,gBAC9EF,OAAA,CAACT,cAAc;QAAC0B,GAAG,EAAEzB,IAAK;QAAC0B,KAAK,EAAC;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1CZ,OAAA,CAACT,cAAc;QAAC0B,GAAG,EAAEtB,IAAK;QAACuB,KAAK,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCZ,OAAA,CAACT,cAAc;QAAC0B,GAAG,EAAEvB,IAAK;QAACwB,KAAK,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCZ,OAAA,CAACT,cAAc;QAAC0B,GAAG,EAAExB,IAAK;QAACyB,KAAK,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCZ,OAAA,CAACT,cAAc;QAAC0B,GAAG,EAAErB,IAAK;QAACsB,KAAK,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCZ,OAAA,CAACT,cAAc;QAAC0B,GAAG,EAAEnB,IAAK;QAACoB,KAAK,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCZ,OAAA,CAACT,cAAc;QAAC0B,GAAG,EAAEpB,IAAK;QAACqB,KAAK,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB;AAACO,EAAA,GAxBQlB,WAAW;AA0BpB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}