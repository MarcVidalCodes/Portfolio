{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction normalizeComputedStyleValue(string) {\n  // \"250px\" --> 250\n  return +string.replace(/px/, '');\n}\nfunction fixDPR(canvas) {\n  var dpr = window.devicePixelRatio;\n  var computedStyles = getComputedStyle(canvas);\n  var width = normalizeComputedStyleValue(computedStyles.getPropertyValue('width'));\n  var height = normalizeComputedStyleValue(computedStyles.getPropertyValue('height'));\n  canvas.setAttribute('width', (width * dpr).toString());\n  canvas.setAttribute('height', (height * dpr).toString());\n}\nfunction generateRandomNumber(min, max) {\n  var fractionDigits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var randomNumber = Math.random() * (max - min) + min;\n  return Math.floor(randomNumber * Math.pow(10, fractionDigits)) / Math.pow(10, fractionDigits);\n}\nfunction generateRandomArrayElement(arr) {\n  return arr[generateRandomNumber(0, arr.length)];\n}\nvar FREE_FALLING_OBJECT_ACCELERATION = 0.00125;\nvar MIN_DRAG_FORCE_COEFFICIENT = 0.0005;\nvar MAX_DRAG_FORCE_COEFFICIENT = 0.0009;\nvar ROTATION_SLOWDOWN_ACCELERATION = 0.00001;\nvar INITIAL_SHAPE_RADIUS = 6;\nvar INITIAL_EMOJI_SIZE = 80;\nvar MIN_INITIAL_CONFETTI_SPEED = 0.9;\nvar MAX_INITIAL_CONFETTI_SPEED = 1.7;\nvar MIN_FINAL_X_CONFETTI_SPEED = 0.2;\nvar MAX_FINAL_X_CONFETTI_SPEED = 0.6;\nvar MIN_INITIAL_ROTATION_SPEED = 0.03;\nvar MAX_INITIAL_ROTATION_SPEED = 0.07;\nvar MIN_CONFETTI_ANGLE = 15;\nvar MAX_CONFETTI_ANGLE = 82;\nvar MAX_CONFETTI_POSITION_SHIFT = 150;\nvar SHAPE_VISIBILITY_TRESHOLD = 100;\nvar DEFAULT_CONFETTI_NUMBER = 250;\nvar DEFAULT_EMOJIS_NUMBER = 40;\nvar DEFAULT_CONFETTI_COLORS = ['#fcf403', '#62fc03', '#f4fc03', '#03e7fc', '#03fca5', '#a503fc', '#fc03ad', '#fc03c2'];\nfunction getWindowWidthCoefficient(canvasWidth) {\n  var HD_SCREEN_WIDTH = 1920;\n  return Math.log(canvasWidth) / Math.log(HD_SCREEN_WIDTH);\n}\nvar ConfettiShape = /*#__PURE__*/function () {\n  function ConfettiShape(args) {\n    _classCallCheck(this, ConfettiShape);\n    var initialPosition = args.initialPosition,\n      direction = args.direction,\n      confettiRadius = args.confettiRadius,\n      confettiColors = args.confettiColors,\n      emojis = args.emojis,\n      emojiSize = args.emojiSize,\n      canvasWidth = args.canvasWidth;\n    var randomConfettiSpeed = generateRandomNumber(MIN_INITIAL_CONFETTI_SPEED, MAX_INITIAL_CONFETTI_SPEED, 3);\n    var initialSpeed = randomConfettiSpeed * getWindowWidthCoefficient(canvasWidth);\n    this.confettiSpeed = {\n      x: initialSpeed,\n      y: initialSpeed\n    };\n    this.finalConfettiSpeedX = generateRandomNumber(MIN_FINAL_X_CONFETTI_SPEED, MAX_FINAL_X_CONFETTI_SPEED, 3);\n    this.rotationSpeed = emojis.length ? 0.01 : generateRandomNumber(MIN_INITIAL_ROTATION_SPEED, MAX_INITIAL_ROTATION_SPEED, 3) * getWindowWidthCoefficient(canvasWidth);\n    this.dragForceCoefficient = generateRandomNumber(MIN_DRAG_FORCE_COEFFICIENT, MAX_DRAG_FORCE_COEFFICIENT, 6);\n    this.radius = {\n      x: confettiRadius,\n      y: confettiRadius\n    };\n    this.initialRadius = confettiRadius;\n    this.rotationAngle = direction === 'left' ? generateRandomNumber(0, 0.2, 3) : generateRandomNumber(-0.2, 0, 3);\n    this.emojiSize = emojiSize;\n    this.emojiRotationAngle = generateRandomNumber(0, 2 * Math.PI);\n    this.radiusYUpdateDirection = 'down';\n    var angle = direction === 'left' ? generateRandomNumber(MAX_CONFETTI_ANGLE, MIN_CONFETTI_ANGLE) * Math.PI / 180 : generateRandomNumber(-MIN_CONFETTI_ANGLE, -MAX_CONFETTI_ANGLE) * Math.PI / 180;\n    this.absCos = Math.abs(Math.cos(angle));\n    this.absSin = Math.abs(Math.sin(angle));\n    var positionShift = generateRandomNumber(-MAX_CONFETTI_POSITION_SHIFT, 0);\n    var shiftedInitialPosition = {\n      x: initialPosition.x + (direction === 'left' ? -positionShift : positionShift) * this.absCos,\n      y: initialPosition.y - positionShift * this.absSin\n    };\n    this.currentPosition = Object.assign({}, shiftedInitialPosition);\n    this.initialPosition = Object.assign({}, shiftedInitialPosition);\n    this.color = emojis.length ? null : generateRandomArrayElement(confettiColors);\n    this.emoji = emojis.length ? generateRandomArrayElement(emojis) : null;\n    this.createdAt = new Date().getTime();\n    this.direction = direction;\n  }\n  _createClass(ConfettiShape, [{\n    key: \"draw\",\n    value: function draw(canvasContext) {\n      var currentPosition = this.currentPosition,\n        radius = this.radius,\n        color = this.color,\n        emoji = this.emoji,\n        rotationAngle = this.rotationAngle,\n        emojiRotationAngle = this.emojiRotationAngle,\n        emojiSize = this.emojiSize;\n      var dpr = window.devicePixelRatio;\n      if (color) {\n        canvasContext.fillStyle = color;\n        canvasContext.beginPath();\n        canvasContext.ellipse(currentPosition.x * dpr, currentPosition.y * dpr, radius.x * dpr, radius.y * dpr, rotationAngle, 0, 2 * Math.PI);\n        canvasContext.fill();\n      } else if (emoji) {\n        canvasContext.font = \"\".concat(emojiSize, \"px serif\");\n        canvasContext.save();\n        canvasContext.translate(dpr * currentPosition.x, dpr * currentPosition.y);\n        canvasContext.rotate(emojiRotationAngle);\n        canvasContext.textAlign = 'center';\n        canvasContext.fillText(emoji, 0, 0);\n        canvasContext.restore();\n      }\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition(iterationTimeDelta, currentTime) {\n      var confettiSpeed = this.confettiSpeed,\n        dragForceCoefficient = this.dragForceCoefficient,\n        finalConfettiSpeedX = this.finalConfettiSpeedX,\n        radiusYUpdateDirection = this.radiusYUpdateDirection,\n        rotationSpeed = this.rotationSpeed,\n        createdAt = this.createdAt,\n        direction = this.direction;\n      var timeDeltaSinceCreation = currentTime - createdAt;\n      if (confettiSpeed.x > finalConfettiSpeedX) this.confettiSpeed.x -= dragForceCoefficient * iterationTimeDelta;\n      this.currentPosition.x += confettiSpeed.x * (direction === 'left' ? -this.absCos : this.absCos) * iterationTimeDelta;\n      this.currentPosition.y = this.initialPosition.y - confettiSpeed.y * this.absSin * timeDeltaSinceCreation + FREE_FALLING_OBJECT_ACCELERATION * Math.pow(timeDeltaSinceCreation, 2) / 2;\n      this.rotationSpeed -= this.emoji ? 0.0001 : ROTATION_SLOWDOWN_ACCELERATION * iterationTimeDelta;\n      if (this.rotationSpeed < 0) this.rotationSpeed = 0; // no need to update rotation radius for emoji\n\n      if (this.emoji) {\n        this.emojiRotationAngle += this.rotationSpeed * iterationTimeDelta % (2 * Math.PI);\n        return;\n      }\n      if (radiusYUpdateDirection === 'down') {\n        this.radius.y -= iterationTimeDelta * rotationSpeed;\n        if (this.radius.y <= 0) {\n          this.radius.y = 0;\n          this.radiusYUpdateDirection = 'up';\n        }\n      } else {\n        this.radius.y += iterationTimeDelta * rotationSpeed;\n        if (this.radius.y >= this.initialRadius) {\n          this.radius.y = this.initialRadius;\n          this.radiusYUpdateDirection = 'down';\n        }\n      }\n    }\n  }, {\n    key: \"getIsVisibleOnCanvas\",\n    value: function getIsVisibleOnCanvas(canvasHeight) {\n      return this.currentPosition.y < canvasHeight + SHAPE_VISIBILITY_TRESHOLD;\n    }\n  }]);\n  return ConfettiShape;\n}();\nfunction createCanvas() {\n  var canvas = document.createElement('canvas');\n  canvas.style.position = 'fixed';\n  canvas.style.width = '100%';\n  canvas.style.height = '100%';\n  canvas.style.top = '0';\n  canvas.style.left = '0';\n  canvas.style.zIndex = '1000';\n  canvas.style.pointerEvents = 'none';\n  document.body.appendChild(canvas);\n  return canvas;\n}\nfunction normalizeConfettiConfig(confettiConfig) {\n  var _confettiConfig$confe = confettiConfig.confettiRadius,\n    confettiRadius = _confettiConfig$confe === void 0 ? INITIAL_SHAPE_RADIUS : _confettiConfig$confe,\n    _confettiConfig$confe2 = confettiConfig.confettiNumber,\n    confettiNumber = _confettiConfig$confe2 === void 0 ? confettiConfig.confettiesNumber || (confettiConfig.emojis ? DEFAULT_EMOJIS_NUMBER : DEFAULT_CONFETTI_NUMBER) : _confettiConfig$confe2,\n    _confettiConfig$confe3 = confettiConfig.confettiColors,\n    confettiColors = _confettiConfig$confe3 === void 0 ? DEFAULT_CONFETTI_COLORS : _confettiConfig$confe3,\n    _confettiConfig$emoji = confettiConfig.emojis,\n    emojis = _confettiConfig$emoji === void 0 ? confettiConfig.emojies || [] : _confettiConfig$emoji,\n    _confettiConfig$emoji2 = confettiConfig.emojiSize,\n    emojiSize = _confettiConfig$emoji2 === void 0 ? INITIAL_EMOJI_SIZE : _confettiConfig$emoji2; // deprecate wrong plural forms, used in early releases\n\n  if (confettiConfig.emojies) console.error(\"emojies argument is deprecated, please use emojis instead\");\n  if (confettiConfig.confettiesNumber) console.error(\"confettiesNumber argument is deprecated, please use confettiNumber instead\");\n  return {\n    confettiRadius: confettiRadius,\n    confettiNumber: confettiNumber,\n    confettiColors: confettiColors,\n    emojis: emojis,\n    emojiSize: emojiSize\n  };\n}\nvar ConfettiBatch = /*#__PURE__*/function () {\n  function ConfettiBatch(canvasContext) {\n    var _this = this;\n    _classCallCheck(this, ConfettiBatch);\n    this.canvasContext = canvasContext;\n    this.shapes = [];\n    this.promise = new Promise(function (completionCallback) {\n      return _this.resolvePromise = completionCallback;\n    });\n  }\n  _createClass(ConfettiBatch, [{\n    key: \"getBatchCompletePromise\",\n    value: function getBatchCompletePromise() {\n      return this.promise;\n    }\n  }, {\n    key: \"addShapes\",\n    value: function addShapes() {\n      var _this$shapes;\n      (_this$shapes = this.shapes).push.apply(_this$shapes, arguments);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _a;\n      if (this.shapes.length) {\n        return false;\n      }\n      (_a = this.resolvePromise) === null || _a === void 0 ? void 0 : _a.call(this);\n      return true;\n    }\n  }, {\n    key: \"processShapes\",\n    value: function processShapes(time, canvasHeight, cleanupInvisibleShapes) {\n      var _this2 = this;\n      var timeDelta = time.timeDelta,\n        currentTime = time.currentTime;\n      this.shapes = this.shapes.filter(function (shape) {\n        // Render the shapes in this batch\n        shape.updatePosition(timeDelta, currentTime);\n        shape.draw(_this2.canvasContext); // Only cleanup the shapes if we're being asked to\n\n        if (!cleanupInvisibleShapes) {\n          return true;\n        }\n        return shape.getIsVisibleOnCanvas(canvasHeight);\n      });\n    }\n  }]);\n  return ConfettiBatch;\n}();\nvar JSConfetti = /*#__PURE__*/function () {\n  function JSConfetti() {\n    var jsConfettiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, JSConfetti);\n    this.activeConfettiBatches = [];\n    this.canvas = jsConfettiConfig.canvas || createCanvas();\n    this.canvasContext = this.canvas.getContext('2d');\n    this.requestAnimationFrameRequested = false;\n    this.lastUpdated = new Date().getTime();\n    this.iterationIndex = 0;\n    this.loop = this.loop.bind(this);\n    requestAnimationFrame(this.loop);\n  }\n  _createClass(JSConfetti, [{\n    key: \"loop\",\n    value: function loop() {\n      this.requestAnimationFrameRequested = false;\n      fixDPR(this.canvas);\n      var currentTime = new Date().getTime();\n      var timeDelta = currentTime - this.lastUpdated;\n      var canvasHeight = this.canvas.offsetHeight;\n      var cleanupInvisibleShapes = this.iterationIndex % 10 === 0;\n      this.activeConfettiBatches = this.activeConfettiBatches.filter(function (batch) {\n        batch.processShapes({\n          timeDelta: timeDelta,\n          currentTime: currentTime\n        }, canvasHeight, cleanupInvisibleShapes); // Do not remove invisible shapes on every iteration\n\n        if (!cleanupInvisibleShapes) {\n          return true;\n        }\n        return !batch.complete();\n      });\n      this.iterationIndex++;\n      this.queueAnimationFrameIfNeeded(currentTime);\n    }\n  }, {\n    key: \"queueAnimationFrameIfNeeded\",\n    value: function queueAnimationFrameIfNeeded(currentTime) {\n      if (this.requestAnimationFrameRequested) {\n        // We already have a pended animation frame, so there is no more work\n        return;\n      }\n      if (this.activeConfettiBatches.length < 1) {\n        // No shapes to animate, so don't queue another frame\n        return;\n      }\n      this.requestAnimationFrameRequested = true; // Capture the last updated time for animation\n\n      this.lastUpdated = currentTime || new Date().getTime();\n      requestAnimationFrame(this.loop);\n    }\n  }, {\n    key: \"addConfetti\",\n    value: function addConfetti() {\n      var confettiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _normalizeConfettiCon = normalizeConfettiConfig(confettiConfig),\n        confettiRadius = _normalizeConfettiCon.confettiRadius,\n        confettiNumber = _normalizeConfettiCon.confettiNumber,\n        confettiColors = _normalizeConfettiCon.confettiColors,\n        emojis = _normalizeConfettiCon.emojis,\n        emojiSize = _normalizeConfettiCon.emojiSize; // Use the bounding rect rather tahn the canvas width / height, because\n      // .width / .height are unset until a layout pass has been completed. Upon\n      // confetti being immediately queued on a page load, this hasn't happened so\n      // the default of 300x150 will be returned, causing an improper source point\n      // for the confetti animation.\n\n      var canvasRect = this.canvas.getBoundingClientRect();\n      var canvasWidth = canvasRect.width;\n      var canvasHeight = canvasRect.height;\n      var yPosition = canvasHeight * 5 / 7;\n      var leftConfettiPosition = {\n        x: 0,\n        y: yPosition\n      };\n      var rightConfettiPosition = {\n        x: canvasWidth,\n        y: yPosition\n      };\n      var confettiGroup = new ConfettiBatch(this.canvasContext);\n      for (var i = 0; i < confettiNumber / 2; i++) {\n        var confettiOnTheRight = new ConfettiShape({\n          initialPosition: leftConfettiPosition,\n          direction: 'right',\n          confettiRadius: confettiRadius,\n          confettiColors: confettiColors,\n          confettiNumber: confettiNumber,\n          emojis: emojis,\n          emojiSize: emojiSize,\n          canvasWidth: canvasWidth\n        });\n        var confettiOnTheLeft = new ConfettiShape({\n          initialPosition: rightConfettiPosition,\n          direction: 'left',\n          confettiRadius: confettiRadius,\n          confettiColors: confettiColors,\n          confettiNumber: confettiNumber,\n          emojis: emojis,\n          emojiSize: emojiSize,\n          canvasWidth: canvasWidth\n        });\n        confettiGroup.addShapes(confettiOnTheRight, confettiOnTheLeft);\n      }\n      this.activeConfettiBatches.push(confettiGroup);\n      this.queueAnimationFrameIfNeeded();\n      return confettiGroup.getBatchCompletePromise();\n    }\n  }, {\n    key: \"clearCanvas\",\n    value: function clearCanvas() {\n      this.activeConfettiBatches = [];\n    }\n  }]);\n  return JSConfetti;\n}();\nexport default JSConfetti;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","normalizeComputedStyleValue","string","replace","fixDPR","canvas","dpr","window","devicePixelRatio","computedStyles","getComputedStyle","width","getPropertyValue","height","setAttribute","toString","generateRandomNumber","min","max","fractionDigits","arguments","undefined","randomNumber","Math","random","floor","pow","generateRandomArrayElement","arr","FREE_FALLING_OBJECT_ACCELERATION","MIN_DRAG_FORCE_COEFFICIENT","MAX_DRAG_FORCE_COEFFICIENT","ROTATION_SLOWDOWN_ACCELERATION","INITIAL_SHAPE_RADIUS","INITIAL_EMOJI_SIZE","MIN_INITIAL_CONFETTI_SPEED","MAX_INITIAL_CONFETTI_SPEED","MIN_FINAL_X_CONFETTI_SPEED","MAX_FINAL_X_CONFETTI_SPEED","MIN_INITIAL_ROTATION_SPEED","MAX_INITIAL_ROTATION_SPEED","MIN_CONFETTI_ANGLE","MAX_CONFETTI_ANGLE","MAX_CONFETTI_POSITION_SHIFT","SHAPE_VISIBILITY_TRESHOLD","DEFAULT_CONFETTI_NUMBER","DEFAULT_EMOJIS_NUMBER","DEFAULT_CONFETTI_COLORS","getWindowWidthCoefficient","canvasWidth","HD_SCREEN_WIDTH","log","ConfettiShape","args","initialPosition","direction","confettiRadius","confettiColors","emojis","emojiSize","randomConfettiSpeed","initialSpeed","confettiSpeed","x","y","finalConfettiSpeedX","rotationSpeed","dragForceCoefficient","radius","initialRadius","rotationAngle","emojiRotationAngle","PI","radiusYUpdateDirection","angle","absCos","abs","cos","absSin","sin","positionShift","shiftedInitialPosition","currentPosition","assign","color","emoji","createdAt","Date","getTime","value","draw","canvasContext","fillStyle","beginPath","ellipse","fill","font","concat","save","translate","rotate","textAlign","fillText","restore","updatePosition","iterationTimeDelta","currentTime","timeDeltaSinceCreation","getIsVisibleOnCanvas","canvasHeight","createCanvas","document","createElement","style","position","top","left","zIndex","pointerEvents","body","appendChild","normalizeConfettiConfig","confettiConfig","_confettiConfig$confe","_confettiConfig$confe2","confettiNumber","confettiesNumber","_confettiConfig$confe3","_confettiConfig$emoji","emojies","_confettiConfig$emoji2","console","error","ConfettiBatch","_this","shapes","promise","Promise","completionCallback","resolvePromise","getBatchCompletePromise","addShapes","_this$shapes","push","apply","complete","_a","call","processShapes","time","cleanupInvisibleShapes","_this2","timeDelta","filter","shape","JSConfetti","jsConfettiConfig","activeConfettiBatches","getContext","requestAnimationFrameRequested","lastUpdated","iterationIndex","loop","bind","requestAnimationFrame","offsetHeight","batch","queueAnimationFrameIfNeeded","addConfetti","_normalizeConfettiCon","canvasRect","getBoundingClientRect","yPosition","leftConfettiPosition","rightConfettiPosition","confettiGroup","confettiOnTheRight","confettiOnTheLeft","clearCanvas"],"sources":["/Users/marcvidal/Documents/Code/test/portfolio/node_modules/js-confetti/dist/es/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction normalizeComputedStyleValue(string) {\n  // \"250px\" --> 250\n  return +string.replace(/px/, '');\n}\n\nfunction fixDPR(canvas) {\n  var dpr = window.devicePixelRatio;\n  var computedStyles = getComputedStyle(canvas);\n  var width = normalizeComputedStyleValue(computedStyles.getPropertyValue('width'));\n  var height = normalizeComputedStyleValue(computedStyles.getPropertyValue('height'));\n  canvas.setAttribute('width', (width * dpr).toString());\n  canvas.setAttribute('height', (height * dpr).toString());\n}\n\nfunction generateRandomNumber(min, max) {\n  var fractionDigits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var randomNumber = Math.random() * (max - min) + min;\n  return Math.floor(randomNumber * Math.pow(10, fractionDigits)) / Math.pow(10, fractionDigits);\n}\n\nfunction generateRandomArrayElement(arr) {\n  return arr[generateRandomNumber(0, arr.length)];\n}\n\nvar FREE_FALLING_OBJECT_ACCELERATION = 0.00125;\nvar MIN_DRAG_FORCE_COEFFICIENT = 0.0005;\nvar MAX_DRAG_FORCE_COEFFICIENT = 0.0009;\nvar ROTATION_SLOWDOWN_ACCELERATION = 0.00001;\nvar INITIAL_SHAPE_RADIUS = 6;\nvar INITIAL_EMOJI_SIZE = 80;\nvar MIN_INITIAL_CONFETTI_SPEED = 0.9;\nvar MAX_INITIAL_CONFETTI_SPEED = 1.7;\nvar MIN_FINAL_X_CONFETTI_SPEED = 0.2;\nvar MAX_FINAL_X_CONFETTI_SPEED = 0.6;\nvar MIN_INITIAL_ROTATION_SPEED = 0.03;\nvar MAX_INITIAL_ROTATION_SPEED = 0.07;\nvar MIN_CONFETTI_ANGLE = 15;\nvar MAX_CONFETTI_ANGLE = 82;\nvar MAX_CONFETTI_POSITION_SHIFT = 150;\nvar SHAPE_VISIBILITY_TRESHOLD = 100;\nvar DEFAULT_CONFETTI_NUMBER = 250;\nvar DEFAULT_EMOJIS_NUMBER = 40;\nvar DEFAULT_CONFETTI_COLORS = ['#fcf403', '#62fc03', '#f4fc03', '#03e7fc', '#03fca5', '#a503fc', '#fc03ad', '#fc03c2'];\n\nfunction getWindowWidthCoefficient(canvasWidth) {\n  var HD_SCREEN_WIDTH = 1920;\n  return Math.log(canvasWidth) / Math.log(HD_SCREEN_WIDTH);\n}\n\nvar ConfettiShape = /*#__PURE__*/function () {\n  function ConfettiShape(args) {\n    _classCallCheck(this, ConfettiShape);\n\n    var initialPosition = args.initialPosition,\n        direction = args.direction,\n        confettiRadius = args.confettiRadius,\n        confettiColors = args.confettiColors,\n        emojis = args.emojis,\n        emojiSize = args.emojiSize,\n        canvasWidth = args.canvasWidth;\n    var randomConfettiSpeed = generateRandomNumber(MIN_INITIAL_CONFETTI_SPEED, MAX_INITIAL_CONFETTI_SPEED, 3);\n    var initialSpeed = randomConfettiSpeed * getWindowWidthCoefficient(canvasWidth);\n    this.confettiSpeed = {\n      x: initialSpeed,\n      y: initialSpeed\n    };\n    this.finalConfettiSpeedX = generateRandomNumber(MIN_FINAL_X_CONFETTI_SPEED, MAX_FINAL_X_CONFETTI_SPEED, 3);\n    this.rotationSpeed = emojis.length ? 0.01 : generateRandomNumber(MIN_INITIAL_ROTATION_SPEED, MAX_INITIAL_ROTATION_SPEED, 3) * getWindowWidthCoefficient(canvasWidth);\n    this.dragForceCoefficient = generateRandomNumber(MIN_DRAG_FORCE_COEFFICIENT, MAX_DRAG_FORCE_COEFFICIENT, 6);\n    this.radius = {\n      x: confettiRadius,\n      y: confettiRadius\n    };\n    this.initialRadius = confettiRadius;\n    this.rotationAngle = direction === 'left' ? generateRandomNumber(0, 0.2, 3) : generateRandomNumber(-0.2, 0, 3);\n    this.emojiSize = emojiSize;\n    this.emojiRotationAngle = generateRandomNumber(0, 2 * Math.PI);\n    this.radiusYUpdateDirection = 'down';\n    var angle = direction === 'left' ? generateRandomNumber(MAX_CONFETTI_ANGLE, MIN_CONFETTI_ANGLE) * Math.PI / 180 : generateRandomNumber(-MIN_CONFETTI_ANGLE, -MAX_CONFETTI_ANGLE) * Math.PI / 180;\n    this.absCos = Math.abs(Math.cos(angle));\n    this.absSin = Math.abs(Math.sin(angle));\n    var positionShift = generateRandomNumber(-MAX_CONFETTI_POSITION_SHIFT, 0);\n    var shiftedInitialPosition = {\n      x: initialPosition.x + (direction === 'left' ? -positionShift : positionShift) * this.absCos,\n      y: initialPosition.y - positionShift * this.absSin\n    };\n    this.currentPosition = Object.assign({}, shiftedInitialPosition);\n    this.initialPosition = Object.assign({}, shiftedInitialPosition);\n    this.color = emojis.length ? null : generateRandomArrayElement(confettiColors);\n    this.emoji = emojis.length ? generateRandomArrayElement(emojis) : null;\n    this.createdAt = new Date().getTime();\n    this.direction = direction;\n  }\n\n  _createClass(ConfettiShape, [{\n    key: \"draw\",\n    value: function draw(canvasContext) {\n      var currentPosition = this.currentPosition,\n          radius = this.radius,\n          color = this.color,\n          emoji = this.emoji,\n          rotationAngle = this.rotationAngle,\n          emojiRotationAngle = this.emojiRotationAngle,\n          emojiSize = this.emojiSize;\n      var dpr = window.devicePixelRatio;\n\n      if (color) {\n        canvasContext.fillStyle = color;\n        canvasContext.beginPath();\n        canvasContext.ellipse(currentPosition.x * dpr, currentPosition.y * dpr, radius.x * dpr, radius.y * dpr, rotationAngle, 0, 2 * Math.PI);\n        canvasContext.fill();\n      } else if (emoji) {\n        canvasContext.font = \"\".concat(emojiSize, \"px serif\");\n        canvasContext.save();\n        canvasContext.translate(dpr * currentPosition.x, dpr * currentPosition.y);\n        canvasContext.rotate(emojiRotationAngle);\n        canvasContext.textAlign = 'center';\n        canvasContext.fillText(emoji, 0, 0);\n        canvasContext.restore();\n      }\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition(iterationTimeDelta, currentTime) {\n      var confettiSpeed = this.confettiSpeed,\n          dragForceCoefficient = this.dragForceCoefficient,\n          finalConfettiSpeedX = this.finalConfettiSpeedX,\n          radiusYUpdateDirection = this.radiusYUpdateDirection,\n          rotationSpeed = this.rotationSpeed,\n          createdAt = this.createdAt,\n          direction = this.direction;\n      var timeDeltaSinceCreation = currentTime - createdAt;\n      if (confettiSpeed.x > finalConfettiSpeedX) this.confettiSpeed.x -= dragForceCoefficient * iterationTimeDelta;\n      this.currentPosition.x += confettiSpeed.x * (direction === 'left' ? -this.absCos : this.absCos) * iterationTimeDelta;\n      this.currentPosition.y = this.initialPosition.y - confettiSpeed.y * this.absSin * timeDeltaSinceCreation + FREE_FALLING_OBJECT_ACCELERATION * Math.pow(timeDeltaSinceCreation, 2) / 2;\n      this.rotationSpeed -= this.emoji ? 0.0001 : ROTATION_SLOWDOWN_ACCELERATION * iterationTimeDelta;\n      if (this.rotationSpeed < 0) this.rotationSpeed = 0; // no need to update rotation radius for emoji\n\n      if (this.emoji) {\n        this.emojiRotationAngle += this.rotationSpeed * iterationTimeDelta % (2 * Math.PI);\n        return;\n      }\n\n      if (radiusYUpdateDirection === 'down') {\n        this.radius.y -= iterationTimeDelta * rotationSpeed;\n\n        if (this.radius.y <= 0) {\n          this.radius.y = 0;\n          this.radiusYUpdateDirection = 'up';\n        }\n      } else {\n        this.radius.y += iterationTimeDelta * rotationSpeed;\n\n        if (this.radius.y >= this.initialRadius) {\n          this.radius.y = this.initialRadius;\n          this.radiusYUpdateDirection = 'down';\n        }\n      }\n    }\n  }, {\n    key: \"getIsVisibleOnCanvas\",\n    value: function getIsVisibleOnCanvas(canvasHeight) {\n      return this.currentPosition.y < canvasHeight + SHAPE_VISIBILITY_TRESHOLD;\n    }\n  }]);\n\n  return ConfettiShape;\n}();\n\nfunction createCanvas() {\n  var canvas = document.createElement('canvas');\n  canvas.style.position = 'fixed';\n  canvas.style.width = '100%';\n  canvas.style.height = '100%';\n  canvas.style.top = '0';\n  canvas.style.left = '0';\n  canvas.style.zIndex = '1000';\n  canvas.style.pointerEvents = 'none';\n  document.body.appendChild(canvas);\n  return canvas;\n}\n\nfunction normalizeConfettiConfig(confettiConfig) {\n  var _confettiConfig$confe = confettiConfig.confettiRadius,\n      confettiRadius = _confettiConfig$confe === void 0 ? INITIAL_SHAPE_RADIUS : _confettiConfig$confe,\n      _confettiConfig$confe2 = confettiConfig.confettiNumber,\n      confettiNumber = _confettiConfig$confe2 === void 0 ? confettiConfig.confettiesNumber || (confettiConfig.emojis ? DEFAULT_EMOJIS_NUMBER : DEFAULT_CONFETTI_NUMBER) : _confettiConfig$confe2,\n      _confettiConfig$confe3 = confettiConfig.confettiColors,\n      confettiColors = _confettiConfig$confe3 === void 0 ? DEFAULT_CONFETTI_COLORS : _confettiConfig$confe3,\n      _confettiConfig$emoji = confettiConfig.emojis,\n      emojis = _confettiConfig$emoji === void 0 ? confettiConfig.emojies || [] : _confettiConfig$emoji,\n      _confettiConfig$emoji2 = confettiConfig.emojiSize,\n      emojiSize = _confettiConfig$emoji2 === void 0 ? INITIAL_EMOJI_SIZE : _confettiConfig$emoji2; // deprecate wrong plural forms, used in early releases\n\n  if (confettiConfig.emojies) console.error(\"emojies argument is deprecated, please use emojis instead\");\n  if (confettiConfig.confettiesNumber) console.error(\"confettiesNumber argument is deprecated, please use confettiNumber instead\");\n  return {\n    confettiRadius: confettiRadius,\n    confettiNumber: confettiNumber,\n    confettiColors: confettiColors,\n    emojis: emojis,\n    emojiSize: emojiSize\n  };\n}\n\nvar ConfettiBatch = /*#__PURE__*/function () {\n  function ConfettiBatch(canvasContext) {\n    var _this = this;\n\n    _classCallCheck(this, ConfettiBatch);\n\n    this.canvasContext = canvasContext;\n    this.shapes = [];\n    this.promise = new Promise(function (completionCallback) {\n      return _this.resolvePromise = completionCallback;\n    });\n  }\n\n  _createClass(ConfettiBatch, [{\n    key: \"getBatchCompletePromise\",\n    value: function getBatchCompletePromise() {\n      return this.promise;\n    }\n  }, {\n    key: \"addShapes\",\n    value: function addShapes() {\n      var _this$shapes;\n\n      (_this$shapes = this.shapes).push.apply(_this$shapes, arguments);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _a;\n\n      if (this.shapes.length) {\n        return false;\n      }\n\n      (_a = this.resolvePromise) === null || _a === void 0 ? void 0 : _a.call(this);\n      return true;\n    }\n  }, {\n    key: \"processShapes\",\n    value: function processShapes(time, canvasHeight, cleanupInvisibleShapes) {\n      var _this2 = this;\n\n      var timeDelta = time.timeDelta,\n          currentTime = time.currentTime;\n      this.shapes = this.shapes.filter(function (shape) {\n        // Render the shapes in this batch\n        shape.updatePosition(timeDelta, currentTime);\n        shape.draw(_this2.canvasContext); // Only cleanup the shapes if we're being asked to\n\n        if (!cleanupInvisibleShapes) {\n          return true;\n        }\n\n        return shape.getIsVisibleOnCanvas(canvasHeight);\n      });\n    }\n  }]);\n\n  return ConfettiBatch;\n}();\n\nvar JSConfetti = /*#__PURE__*/function () {\n  function JSConfetti() {\n    var jsConfettiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, JSConfetti);\n\n    this.activeConfettiBatches = [];\n    this.canvas = jsConfettiConfig.canvas || createCanvas();\n    this.canvasContext = this.canvas.getContext('2d');\n    this.requestAnimationFrameRequested = false;\n    this.lastUpdated = new Date().getTime();\n    this.iterationIndex = 0;\n    this.loop = this.loop.bind(this);\n    requestAnimationFrame(this.loop);\n  }\n\n  _createClass(JSConfetti, [{\n    key: \"loop\",\n    value: function loop() {\n      this.requestAnimationFrameRequested = false;\n      fixDPR(this.canvas);\n      var currentTime = new Date().getTime();\n      var timeDelta = currentTime - this.lastUpdated;\n      var canvasHeight = this.canvas.offsetHeight;\n      var cleanupInvisibleShapes = this.iterationIndex % 10 === 0;\n      this.activeConfettiBatches = this.activeConfettiBatches.filter(function (batch) {\n        batch.processShapes({\n          timeDelta: timeDelta,\n          currentTime: currentTime\n        }, canvasHeight, cleanupInvisibleShapes); // Do not remove invisible shapes on every iteration\n\n        if (!cleanupInvisibleShapes) {\n          return true;\n        }\n\n        return !batch.complete();\n      });\n      this.iterationIndex++;\n      this.queueAnimationFrameIfNeeded(currentTime);\n    }\n  }, {\n    key: \"queueAnimationFrameIfNeeded\",\n    value: function queueAnimationFrameIfNeeded(currentTime) {\n      if (this.requestAnimationFrameRequested) {\n        // We already have a pended animation frame, so there is no more work\n        return;\n      }\n\n      if (this.activeConfettiBatches.length < 1) {\n        // No shapes to animate, so don't queue another frame\n        return;\n      }\n\n      this.requestAnimationFrameRequested = true; // Capture the last updated time for animation\n\n      this.lastUpdated = currentTime || new Date().getTime();\n      requestAnimationFrame(this.loop);\n    }\n  }, {\n    key: \"addConfetti\",\n    value: function addConfetti() {\n      var confettiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var _normalizeConfettiCon = normalizeConfettiConfig(confettiConfig),\n          confettiRadius = _normalizeConfettiCon.confettiRadius,\n          confettiNumber = _normalizeConfettiCon.confettiNumber,\n          confettiColors = _normalizeConfettiCon.confettiColors,\n          emojis = _normalizeConfettiCon.emojis,\n          emojiSize = _normalizeConfettiCon.emojiSize; // Use the bounding rect rather tahn the canvas width / height, because\n      // .width / .height are unset until a layout pass has been completed. Upon\n      // confetti being immediately queued on a page load, this hasn't happened so\n      // the default of 300x150 will be returned, causing an improper source point\n      // for the confetti animation.\n\n\n      var canvasRect = this.canvas.getBoundingClientRect();\n      var canvasWidth = canvasRect.width;\n      var canvasHeight = canvasRect.height;\n      var yPosition = canvasHeight * 5 / 7;\n      var leftConfettiPosition = {\n        x: 0,\n        y: yPosition\n      };\n      var rightConfettiPosition = {\n        x: canvasWidth,\n        y: yPosition\n      };\n      var confettiGroup = new ConfettiBatch(this.canvasContext);\n\n      for (var i = 0; i < confettiNumber / 2; i++) {\n        var confettiOnTheRight = new ConfettiShape({\n          initialPosition: leftConfettiPosition,\n          direction: 'right',\n          confettiRadius: confettiRadius,\n          confettiColors: confettiColors,\n          confettiNumber: confettiNumber,\n          emojis: emojis,\n          emojiSize: emojiSize,\n          canvasWidth: canvasWidth\n        });\n        var confettiOnTheLeft = new ConfettiShape({\n          initialPosition: rightConfettiPosition,\n          direction: 'left',\n          confettiRadius: confettiRadius,\n          confettiColors: confettiColors,\n          confettiNumber: confettiNumber,\n          emojis: emojis,\n          emojiSize: emojiSize,\n          canvasWidth: canvasWidth\n        });\n        confettiGroup.addShapes(confettiOnTheRight, confettiOnTheLeft);\n      }\n\n      this.activeConfettiBatches.push(confettiGroup);\n      this.queueAnimationFrameIfNeeded();\n      return confettiGroup.getBatchCompletePromise();\n    }\n  }, {\n    key: \"clearCanvas\",\n    value: function clearCanvas() {\n      this.activeConfettiBatches = [];\n    }\n  }]);\n\n  return JSConfetti;\n}();\n\nexport default JSConfetti;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}