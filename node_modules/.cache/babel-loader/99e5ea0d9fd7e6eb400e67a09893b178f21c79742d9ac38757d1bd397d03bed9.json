{"ast":null,"code":"\"use client\";\n\n// src/react/index.tsx\nimport { useEffect } from \"react\";\n\n// package.json\nvar name = \"@vercel/analytics\";\nvar version = \"1.5.0\";\n\n// src/queue.ts\nvar initQueue = () => {\n  if (window.va) return;\n  window.va = function a() {\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n    (window.vaq = window.vaq || []).push(params);\n  };\n};\n\n// src/utils.ts\nfunction isBrowser() {\n  return typeof window !== \"undefined\";\n}\nfunction detectEnvironment() {\n  try {\n    const env = process.env.NODE_ENV;\n    if (env === \"development\" || env === \"test\") {\n      return \"development\";\n    }\n  } catch (e) {}\n  return \"production\";\n}\nfunction setMode() {\n  let mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"auto\";\n  if (mode === \"auto\") {\n    window.vam = detectEnvironment();\n    return;\n  }\n  window.vam = mode;\n}\nfunction getMode() {\n  const mode = isBrowser() ? window.vam : detectEnvironment();\n  return mode || \"production\";\n}\nfunction isProduction() {\n  return getMode() === \"production\";\n}\nfunction isDevelopment() {\n  return getMode() === \"development\";\n}\nfunction removeKey(key, _ref) {\n  let {\n    [key]: _,\n    ...rest\n  } = _ref;\n  return rest;\n}\nfunction parseProperties(properties, options) {\n  if (!properties) return void 0;\n  let props = properties;\n  const errorProperties = [];\n  for (const [key, value] of Object.entries(properties)) {\n    if (typeof value === \"object\" && value !== null) {\n      if (options.strip) {\n        props = removeKey(key, props);\n      } else {\n        errorProperties.push(key);\n      }\n    }\n  }\n  if (errorProperties.length > 0 && !options.strip) {\n    throw Error(`The following properties are not valid: ${errorProperties.join(\", \")}. Only strings, numbers, booleans, and null are allowed.`);\n  }\n  return props;\n}\nfunction getScriptSrc(props) {\n  if (props.scriptSrc) {\n    return props.scriptSrc;\n  }\n  if (isDevelopment()) {\n    return \"https://va.vercel-scripts.com/v1/script.debug.js\";\n  }\n  if (props.basePath) {\n    return `${props.basePath}/insights/script.js`;\n  }\n  return \"/_vercel/insights/script.js\";\n}\n\n// src/generic.ts\nfunction inject() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    debug: true\n  };\n  var _a;\n  if (!isBrowser()) return;\n  setMode(props.mode);\n  initQueue();\n  if (props.beforeSend) {\n    (_a = window.va) == null ? void 0 : _a.call(window, \"beforeSend\", props.beforeSend);\n  }\n  const src = getScriptSrc(props);\n  if (document.head.querySelector(`script[src*=\"${src}\"]`)) return;\n  const script = document.createElement(\"script\");\n  script.src = src;\n  script.defer = true;\n  script.dataset.sdkn = name + (props.framework ? `/${props.framework}` : \"\");\n  script.dataset.sdkv = version;\n  if (props.disableAutoTrack) {\n    script.dataset.disableAutoTrack = \"1\";\n  }\n  if (props.endpoint) {\n    script.dataset.endpoint = props.endpoint;\n  } else if (props.basePath) {\n    script.dataset.endpoint = `${props.basePath}/insights`;\n  }\n  if (props.dsn) {\n    script.dataset.dsn = props.dsn;\n  }\n  script.onerror = () => {\n    const errorMessage = isDevelopment() ? \"Please check if any ad blockers are enabled and try again.\" : \"Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.\";\n    console.log(`[Vercel Web Analytics] Failed to load script from ${src}. ${errorMessage}`);\n  };\n  if (isDevelopment() && props.debug === false) {\n    script.dataset.debug = \"false\";\n  }\n  document.head.appendChild(script);\n}\nfunction track(name2, properties, options) {\n  var _a, _b;\n  if (!isBrowser()) {\n    const msg = \"[Vercel Web Analytics] Please import `track` from `@vercel/analytics/server` when using this function in a server environment\";\n    if (isProduction()) {\n      console.warn(msg);\n    } else {\n      throw new Error(msg);\n    }\n    return;\n  }\n  if (!properties) {\n    (_a = window.va) == null ? void 0 : _a.call(window, \"event\", {\n      name: name2,\n      options\n    });\n    return;\n  }\n  try {\n    const props = parseProperties(properties, {\n      strip: isProduction()\n    });\n    (_b = window.va) == null ? void 0 : _b.call(window, \"event\", {\n      name: name2,\n      data: props,\n      options\n    });\n  } catch (err) {\n    if (err instanceof Error && isDevelopment()) {\n      console.error(err);\n    }\n  }\n}\nfunction pageview(_ref2) {\n  let {\n    route,\n    path\n  } = _ref2;\n  var _a;\n  (_a = window.va) == null ? void 0 : _a.call(window, \"pageview\", {\n    route,\n    path\n  });\n}\n\n// src/react/utils.ts\nfunction getBasePath() {\n  if (typeof process === \"undefined\" || typeof process.env === \"undefined\") {\n    return void 0;\n  }\n  return process.env.REACT_APP_VERCEL_OBSERVABILITY_BASEPATH;\n}\n\n// src/react/index.tsx\nfunction Analytics(props) {\n  useEffect(() => {\n    var _a;\n    if (props.beforeSend) {\n      (_a = window.va) == null ? void 0 : _a.call(window, \"beforeSend\", props.beforeSend);\n    }\n  }, [props.beforeSend]);\n  useEffect(() => {\n    inject({\n      framework: props.framework || \"react\",\n      basePath: props.basePath ?? getBasePath(),\n      ...(props.route !== void 0 && {\n        disableAutoTrack: true\n      }),\n      ...props\n    });\n  }, []);\n  useEffect(() => {\n    if (props.route && props.path) {\n      pageview({\n        route: props.route,\n        path: props.path\n      });\n    }\n  }, [props.route, props.path]);\n  return null;\n}\nexport { Analytics, track };","map":{"version":3,"names":["useEffect","name","version","initQueue","window","va","a","_len","arguments","length","params","Array","_key","vaq","push","isBrowser","detectEnvironment","env","process","NODE_ENV","e","setMode","mode","undefined","vam","getMode","isProduction","isDevelopment","removeKey","key","_ref","_","rest","parseProperties","properties","options","props","errorProperties","value","Object","entries","strip","Error","join","getScriptSrc","scriptSrc","basePath","inject","debug","_a","beforeSend","call","src","document","head","querySelector","script","createElement","defer","dataset","sdkn","framework","sdkv","disableAutoTrack","endpoint","dsn","onerror","errorMessage","console","log","appendChild","track","name2","_b","msg","warn","data","err","error","pageview","_ref2","route","path","getBasePath","REACT_APP_VERCEL_OBSERVABILITY_BASEPATH","Analytics"],"sources":["/Users/marcvidal/Documents/Code/Portfolio/node_modules/@vercel/analytics/src/react/index.tsx","/Users/marcvidal/Documents/Code/Portfolio/node_modules/@vercel/analytics/package.json","/Users/marcvidal/Documents/Code/Portfolio/node_modules/@vercel/analytics/src/queue.ts","/Users/marcvidal/Documents/Code/Portfolio/node_modules/@vercel/analytics/src/utils.ts","/Users/marcvidal/Documents/Code/Portfolio/node_modules/@vercel/analytics/src/generic.ts","/Users/marcvidal/Documents/Code/Portfolio/node_modules/@vercel/analytics/src/react/utils.ts"],"sourcesContent":["'use client';\nimport { useEffect } from 'react';\nimport { inject, track, pageview } from '../generic';\nimport type { AnalyticsProps, BeforeSend, BeforeSendEvent } from '../types';\nimport { getBasePath } from './utils';\n\n/**\n * Injects the Vercel Web Analytics script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/concepts/analytics/package).\n * @param [props] - Analytics options.\n * @param [props.mode] - The mode to use for the analytics script. Defaults to `auto`.\n *  - `auto` - Automatically detect the environment.  Uses `production` if the environment cannot be determined.\n *  - `production` - Always use the production script. (Sends events to the server)\n *  - `development` - Always use the development script. (Logs events to the console)\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @example\n * ```js\n * import { Analytics } from '@vercel/analytics/react';\n *\n * export default function App() {\n *  return (\n *   <div>\n *    <Analytics />\n *    <h1>My App</h1>\n *  </div>\n * );\n * }\n * ```\n */\nfunction Analytics(\n  props: AnalyticsProps & {\n    framework?: string;\n    route?: string | null;\n    path?: string | null;\n    basePath?: string;\n  }\n): null {\n  useEffect(() => {\n    if (props.beforeSend) {\n      window.va?.('beforeSend', props.beforeSend);\n    }\n  }, [props.beforeSend]);\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: only run once\n  useEffect(() => {\n    inject({\n      framework: props.framework || 'react',\n      basePath: props.basePath ?? getBasePath(),\n      ...(props.route !== undefined && { disableAutoTrack: true }),\n      ...props,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- only run once\n  }, []);\n\n  useEffect(() => {\n    // explicitely track page view, since we disabled auto tracking\n    if (props.route && props.path) {\n      pageview({ route: props.route, path: props.path });\n    }\n  }, [props.route, props.path]);\n\n  return null;\n}\n\nexport { track, Analytics };\nexport type { AnalyticsProps, BeforeSend, BeforeSendEvent };\n","{\n  \"name\": \"@vercel/analytics\",\n  \"version\": \"1.5.0\",\n  \"description\": \"Gain real-time traffic insights with Vercel Web Analytics\",\n  \"keywords\": [\n    \"analytics\",\n    \"vercel\"\n  ],\n  \"repository\": {\n    \"url\": \"github:vercel/analytics\",\n    \"directory\": \"packages/web\"\n  },\n  \"license\": \"MPL-2.0\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"browser\": \"./dist/index.mjs\",\n      \"import\": \"./dist/index.mjs\",\n      \"require\": \"./dist/index.js\"\n    },\n    \"./astro\": {\n      \"import\": \"./dist/astro/component.ts\"\n    },\n    \"./next\": {\n      \"browser\": \"./dist/next/index.mjs\",\n      \"import\": \"./dist/next/index.mjs\",\n      \"require\": \"./dist/next/index.js\"\n    },\n    \"./nuxt\": {\n      \"browser\": \"./dist/nuxt/index.mjs\",\n      \"import\": \"./dist/nuxt/index.mjs\",\n      \"require\": \"./dist/nuxt/index.js\"\n    },\n    \"./react\": {\n      \"browser\": \"./dist/react/index.mjs\",\n      \"import\": \"./dist/react/index.mjs\",\n      \"require\": \"./dist/react/index.js\"\n    },\n    \"./remix\": {\n      \"browser\": \"./dist/remix/index.mjs\",\n      \"import\": \"./dist/remix/index.mjs\",\n      \"require\": \"./dist/remix/index.js\"\n    },\n    \"./server\": {\n      \"node\": \"./dist/server/index.mjs\",\n      \"edge-light\": \"./dist/server/index.mjs\",\n      \"import\": \"./dist/server/index.mjs\",\n      \"require\": \"./dist/server/index.js\",\n      \"default\": \"./dist/server/index.js\"\n    },\n    \"./sveltekit\": {\n      \"svelte\": \"./dist/sveltekit/index.mjs\",\n      \"types\": \"./dist/sveltekit/index.d.ts\"\n    },\n    \"./vue\": {\n      \"browser\": \"./dist/vue/index.mjs\",\n      \"import\": \"./dist/vue/index.mjs\",\n      \"require\": \"./dist/vue/index.js\"\n    }\n  },\n  \"main\": \"./dist/index.mjs\",\n  \"types\": \"./dist/index.d.ts\",\n  \"typesVersions\": {\n    \"*\": {\n      \"*\": [\n        \"dist/index.d.ts\"\n      ],\n      \"next\": [\n        \"dist/next/index.d.ts\"\n      ],\n      \"nuxt\": [\n        \"dist/nuxt/index.d.ts\"\n      ],\n      \"react\": [\n        \"dist/react/index.d.ts\"\n      ],\n      \"remix\": [\n        \"dist/remix/index.d.ts\"\n      ],\n      \"server\": [\n        \"dist/server/index.d.ts\"\n      ],\n      \"sveltekit\": [\n        \"dist/sveltekit/index.d.ts\"\n      ],\n      \"vue\": [\n        \"dist/vue/index.d.ts\"\n      ]\n    }\n  },\n  \"scripts\": {\n    \"build\": \"tsup && pnpm copy-astro\",\n    \"copy-astro\": \"cp -R src/astro dist/\",\n    \"dev\": \"pnpm copy-astro && tsup --watch\",\n    \"lint\": \"eslint .\",\n    \"lint-fix\": \"eslint . --fix\",\n    \"test\": \"vitest\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"@vercel/eslint-config\"\n    ],\n    \"rules\": {\n      \"tsdoc/syntax\": \"off\"\n    },\n    \"ignorePatterns\": [\n      \"jest.setup.ts\"\n    ]\n  },\n  \"devDependencies\": {\n    \"@swc/core\": \"^1.9.2\",\n    \"@testing-library/jest-dom\": \"^6.6.3\",\n    \"@testing-library/react\": \"^16.0.1\",\n    \"@types/node\": \"^22.9.0\",\n    \"@types/react\": \"^18.3.12\",\n    \"@vercel/eslint-config\": \"workspace:0.0.0\",\n    \"server-only\": \"^0.0.1\",\n    \"svelte\": \"^5.1.10\",\n    \"tsup\": \"8.3.5\",\n    \"vitest\": \"^2.1.5\",\n    \"vue\": \"^3.5.12\",\n    \"vue-router\": \"^4.4.5\"\n  },\n  \"peerDependencies\": {\n    \"@remix-run/react\": \"^2\",\n    \"@sveltejs/kit\": \"^1 || ^2\",\n    \"next\": \">= 13\",\n    \"react\": \"^18 || ^19 || ^19.0.0-rc\",\n    \"svelte\": \">= 4\",\n    \"vue\": \"^3\",\n    \"vue-router\": \"^4\"\n  },\n  \"peerDependenciesMeta\": {\n    \"@remix-run/react\": {\n      \"optional\": true\n    },\n    \"@sveltejs/kit\": {\n      \"optional\": true\n    },\n    \"next\": {\n      \"optional\": true\n    },\n    \"react\": {\n      \"optional\": true\n    },\n    \"svelte\": {\n      \"optional\": true\n    },\n    \"vue\": {\n      \"optional\": true\n    },\n    \"vue-router\": {\n      \"optional\": true\n    }\n  }\n}\n","export const initQueue = (): void => {\n  // initialize va until script is loaded\n  if (window.va) return;\n\n  window.va = function a(...params): void {\n    (window.vaq = window.vaq || []).push(params);\n  };\n};\n","import type { AllowedPropertyValues, AnalyticsProps, Mode } from './types';\n\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined';\n}\n\nfunction detectEnvironment(): 'development' | 'production' {\n  try {\n    const env = process.env.NODE_ENV;\n    if (env === 'development' || env === 'test') {\n      return 'development';\n    }\n  } catch (e) {\n    // do nothing, this is okay\n  }\n  return 'production';\n}\n\nexport function setMode(mode: Mode = 'auto'): void {\n  if (mode === 'auto') {\n    window.vam = detectEnvironment();\n    return;\n  }\n\n  window.vam = mode;\n}\n\nexport function getMode(): Mode {\n  const mode = isBrowser() ? window.vam : detectEnvironment();\n  return mode || 'production';\n}\n\nexport function isProduction(): boolean {\n  return getMode() === 'production';\n}\n\nexport function isDevelopment(): boolean {\n  return getMode() === 'development';\n}\n\nfunction removeKey(\n  key: string,\n  { [key]: _, ...rest }\n): Record<string, unknown> {\n  return rest;\n}\n\nexport function parseProperties(\n  properties: Record<string, unknown> | undefined,\n  options: {\n    strip?: boolean;\n  }\n): Error | Record<string, AllowedPropertyValues> | undefined {\n  if (!properties) return undefined;\n  let props = properties;\n  const errorProperties: string[] = [];\n  for (const [key, value] of Object.entries(properties)) {\n    if (typeof value === 'object' && value !== null) {\n      if (options.strip) {\n        props = removeKey(key, props);\n      } else {\n        errorProperties.push(key);\n      }\n    }\n  }\n\n  if (errorProperties.length > 0 && !options.strip) {\n    throw Error(\n      `The following properties are not valid: ${errorProperties.join(\n        ', '\n      )}. Only strings, numbers, booleans, and null are allowed.`\n    );\n  }\n  return props as Record<string, AllowedPropertyValues>;\n}\n\nexport function computeRoute(\n  pathname: string | null,\n  pathParams: Record<string, string | string[]> | null\n): string | null {\n  if (!pathname || !pathParams) {\n    return pathname;\n  }\n\n  let result = pathname;\n  try {\n    const entries = Object.entries(pathParams);\n    // simple keys must be handled first\n    for (const [key, value] of entries) {\n      if (!Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value);\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[${key}]`);\n        }\n      }\n    }\n    // array values next\n    for (const [key, value] of entries) {\n      if (Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value.join('/'));\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[...${key}]`);\n        }\n      }\n    }\n    return result;\n  } catch (e) {\n    return pathname;\n  }\n}\n\nfunction turnValueToRegExp(value: string): RegExp {\n  return new RegExp(`/${escapeRegExp(value)}(?=[/?#]|$)`);\n}\n\nfunction escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nexport function getScriptSrc(\n  props: AnalyticsProps & { basePath?: string }\n): string {\n  if (props.scriptSrc) {\n    return props.scriptSrc;\n  }\n  if (isDevelopment()) {\n    return 'https://va.vercel-scripts.com/v1/script.debug.js';\n  }\n  if (props.basePath) {\n    return `${props.basePath}/insights/script.js`;\n  }\n  return '/_vercel/insights/script.js';\n}\n","import { name as packageName, version } from '../package.json';\nimport { initQueue } from './queue';\nimport type {\n  AllowedPropertyValues,\n  AnalyticsProps,\n  FlagsDataInput,\n  BeforeSend,\n  BeforeSendEvent,\n} from './types';\nimport {\n  isBrowser,\n  parseProperties,\n  setMode,\n  isDevelopment,\n  isProduction,\n  computeRoute,\n  getScriptSrc,\n} from './utils';\n\n/**\n * Injects the Vercel Web Analytics script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/concepts/analytics/package).\n * @param [props] - Analytics options.\n * @param [props.mode] - The mode to use for the analytics script. Defaults to `auto`.\n *  - `auto` - Automatically detect the environment.  Uses `production` if the environment cannot be determined.\n *  - `production` - Always use the production script. (Sends events to the server)\n *  - `development` - Always use the development script. (Logs events to the console)\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @param [props.dsn] - The DSN of the project to send events to. Only required when self-hosting.\n * @param [props.disableAutoTrack] - Whether the injected script should track page views from pushState events. Disable if route is updated after pushState, a manually call page pageview().\n */\nfunction inject(\n  props: AnalyticsProps & {\n    framework?: string;\n    disableAutoTrack?: boolean;\n    basePath?: string;\n  } = {\n    debug: true,\n  }\n): void {\n  if (!isBrowser()) return;\n\n  setMode(props.mode);\n\n  initQueue();\n\n  if (props.beforeSend) {\n    window.va?.('beforeSend', props.beforeSend);\n  }\n\n  const src = getScriptSrc(props);\n\n  if (document.head.querySelector(`script[src*=\"${src}\"]`)) return;\n\n  const script = document.createElement('script');\n  script.src = src;\n  script.defer = true;\n  script.dataset.sdkn =\n    packageName + (props.framework ? `/${props.framework}` : '');\n  script.dataset.sdkv = version;\n\n  if (props.disableAutoTrack) {\n    script.dataset.disableAutoTrack = '1';\n  }\n  if (props.endpoint) {\n    script.dataset.endpoint = props.endpoint;\n  } else if (props.basePath) {\n    script.dataset.endpoint = `${props.basePath}/insights`;\n  }\n  if (props.dsn) {\n    script.dataset.dsn = props.dsn;\n  }\n\n  script.onerror = (): void => {\n    const errorMessage = isDevelopment()\n      ? 'Please check if any ad blockers are enabled and try again.'\n      : 'Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.';\n\n    // eslint-disable-next-line no-console -- Logging to console is intentional\n    console.log(\n      `[Vercel Web Analytics] Failed to load script from ${src}. ${errorMessage}`\n    );\n  };\n\n  if (isDevelopment() && props.debug === false) {\n    script.dataset.debug = 'false';\n  }\n\n  document.head.appendChild(script);\n}\n\n/**\n * Tracks a custom event. Please refer to the [documentation](https://vercel.com/docs/concepts/analytics/custom-events) for more information on custom events.\n * @param name - The name of the event.\n * * Examples: `Purchase`, `Click Button`, or `Play Video`.\n * @param [properties] - Additional properties of the event. Nested objects are not supported. Allowed values are `string`, `number`, `boolean`, and `null`.\n */\nfunction track(\n  name: string,\n  properties?: Record<string, AllowedPropertyValues>,\n  options?: {\n    flags?: FlagsDataInput;\n  }\n): void {\n  if (!isBrowser()) {\n    const msg =\n      '[Vercel Web Analytics] Please import `track` from `@vercel/analytics/server` when using this function in a server environment';\n\n    if (isProduction()) {\n      // eslint-disable-next-line no-console -- Show warning in production\n      console.warn(msg);\n    } else {\n      throw new Error(msg);\n    }\n\n    return;\n  }\n\n  if (!properties) {\n    window.va?.('event', { name, options });\n    return;\n  }\n\n  try {\n    const props = parseProperties(properties, {\n      strip: isProduction(),\n    });\n\n    window.va?.('event', {\n      name,\n      data: props,\n      options,\n    });\n  } catch (err) {\n    if (err instanceof Error && isDevelopment()) {\n      // eslint-disable-next-line no-console -- Logging to console is intentional\n      console.error(err);\n    }\n  }\n}\n\nfunction pageview({\n  route,\n  path,\n}: {\n  route?: string | null;\n  path?: string;\n}): void {\n  window.va?.('pageview', { route, path });\n}\n\nexport { inject, track, pageview, computeRoute };\nexport type { AnalyticsProps, BeforeSend, BeforeSendEvent };\n\n// eslint-disable-next-line import/no-default-export -- Default export is intentional\nexport default {\n  inject,\n  track,\n  computeRoute,\n};\n","export function getBasePath(): string | undefined {\n  // !! important !!\n  // do not access env variables using process.env[varname]\n  // some bundles won't replace the value at build time.\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain -- we can't use optionnal here, it'll break if process does not exist.\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return undefined;\n  }\n  return process.env.REACT_APP_VERCEL_OBSERVABILITY_BASEPATH;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}