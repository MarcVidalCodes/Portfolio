{"ast":null,"code":"'use client';\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport makeEventProps from 'make-event-props';\nimport makeCancellable from 'make-cancellable-promise';\nimport clsx from 'clsx';\nimport invariant from 'tiny-invariant';\nimport warning from 'warning';\nimport { dequal } from 'dequal';\nimport * as pdfjs from 'pdfjs-dist';\nimport DocumentContext from './DocumentContext.js';\nimport Message from './Message.js';\nimport LinkService from './LinkService.js';\nimport PasswordResponses from './PasswordResponses.js';\nimport { cancelRunningTask, dataURItoByteString, displayCORSWarning, isArrayBuffer, isBlob, isBrowser, isDataURI, loadFromFile } from './shared/utils.js';\nimport useResolver from './shared/hooks/useResolver.js';\nconst {\n  PDFDataRangeTransport\n} = pdfjs;\nconst defaultOnPassword = (callback, reason) => {\n  switch (reason) {\n    case PasswordResponses.NEED_PASSWORD:\n      {\n        const password = prompt('Enter the password to open this PDF file.');\n        callback(password);\n        break;\n      }\n    case PasswordResponses.INCORRECT_PASSWORD:\n      {\n        const password = prompt('Invalid password. Please try again.');\n        callback(password);\n        break;\n      }\n    default:\n  }\n};\nfunction isParameterObject(file) {\n  return typeof file === 'object' && file !== null && ('data' in file || 'range' in file || 'url' in file);\n}\n/**\n * Loads a document passed using `file` prop.\n */\nconst Document = forwardRef(function Document(_a, ref) {\n  var {\n      children,\n      className,\n      error = 'Failed to load PDF file.',\n      externalLinkRel,\n      externalLinkTarget,\n      file,\n      inputRef,\n      imageResourcesPath,\n      loading = 'Loading PDFâ€¦',\n      noData = 'No PDF file specified.',\n      onItemClick,\n      onLoadError: onLoadErrorProps,\n      onLoadProgress,\n      onLoadSuccess: onLoadSuccessProps,\n      onPassword = defaultOnPassword,\n      onSourceError: onSourceErrorProps,\n      onSourceSuccess: onSourceSuccessProps,\n      options,\n      renderMode,\n      rotate\n    } = _a,\n    otherProps = __rest(_a, [\"children\", \"className\", \"error\", \"externalLinkRel\", \"externalLinkTarget\", \"file\", \"inputRef\", \"imageResourcesPath\", \"loading\", \"noData\", \"onItemClick\", \"onLoadError\", \"onLoadProgress\", \"onLoadSuccess\", \"onPassword\", \"onSourceError\", \"onSourceSuccess\", \"options\", \"renderMode\", \"rotate\"]);\n  const [sourceState, sourceDispatch] = useResolver();\n  const {\n    value: source,\n    error: sourceError\n  } = sourceState;\n  const [pdfState, pdfDispatch] = useResolver();\n  const {\n    value: pdf,\n    error: pdfError\n  } = pdfState;\n  const linkService = useRef(new LinkService());\n  const pages = useRef([]);\n  const prevFile = useRef(undefined);\n  const prevOptions = useRef(undefined);\n  if (file && file !== prevFile.current && isParameterObject(file)) {\n    warning(!dequal(file, prevFile.current), `File prop passed to <Document /> changed, but it's equal to previous one. This might result in unnecessary reloads. Consider memoizing the value passed to \"file\" prop.`);\n    prevFile.current = file;\n  }\n  // Detect non-memoized changes in options prop\n  if (options && options !== prevOptions.current) {\n    warning(!dequal(options, prevOptions.current), `Options prop passed to <Document /> changed, but it's equal to previous one. This might result in unnecessary reloads. Consider memoizing the value passed to \"options\" prop.`);\n    prevOptions.current = options;\n  }\n  const viewer = useRef({\n    // Handling jumping to internal links target\n    scrollPageIntoView: args => {\n      const {\n        dest,\n        pageNumber,\n        pageIndex = pageNumber - 1\n      } = args;\n      // First, check if custom handling of onItemClick was provided\n      if (onItemClick) {\n        onItemClick({\n          dest,\n          pageIndex,\n          pageNumber\n        });\n        return;\n      }\n      // If not, try to look for target page within the <Document>.\n      const page = pages.current[pageIndex];\n      if (page) {\n        // Scroll to the page automatically\n        page.scrollIntoView();\n        return;\n      }\n      warning(false, `An internal link leading to page ${pageNumber} was clicked, but neither <Document> was provided with onItemClick nor it was able to find the page within itself. Either provide onItemClick to <Document> and handle navigating by yourself or ensure that all pages are rendered within <Document>.`);\n    }\n  });\n  useImperativeHandle(ref, () => ({\n    linkService,\n    pages,\n    viewer\n  }), []);\n  /**\n   * Called when a document source is resolved correctly\n   */\n  function onSourceSuccess() {\n    if (onSourceSuccessProps) {\n      onSourceSuccessProps();\n    }\n  }\n  /**\n   * Called when a document source failed to be resolved correctly\n   */\n  function onSourceError() {\n    if (!sourceError) {\n      // Impossible, but TypeScript doesn't know that\n      return;\n    }\n    warning(false, sourceError.toString());\n    if (onSourceErrorProps) {\n      onSourceErrorProps(sourceError);\n    }\n  }\n  function resetSource() {\n    sourceDispatch({\n      type: 'RESET'\n    });\n  }\n  // biome-ignore lint/correctness/useExhaustiveDependencies: See https://github.com/biomejs/biome/issues/3080\n  useEffect(resetSource, [file, sourceDispatch]);\n  const findDocumentSource = useCallback(() => __awaiter(this, void 0, void 0, function* () {\n    if (!file) {\n      return null;\n    }\n    // File is a string\n    if (typeof file === 'string') {\n      if (isDataURI(file)) {\n        const fileByteString = dataURItoByteString(file);\n        return {\n          data: fileByteString\n        };\n      }\n      displayCORSWarning();\n      return {\n        url: file\n      };\n    }\n    // File is PDFDataRangeTransport\n    if (file instanceof PDFDataRangeTransport) {\n      return {\n        range: file\n      };\n    }\n    // File is an ArrayBuffer\n    if (isArrayBuffer(file)) {\n      return {\n        data: file\n      };\n    }\n    /**\n     * The cases below are browser-only.\n     * If you're running on a non-browser environment, these cases will be of no use.\n     */\n    if (isBrowser) {\n      // File is a Blob\n      if (isBlob(file)) {\n        const data = yield loadFromFile(file);\n        return {\n          data\n        };\n      }\n    }\n    // At this point, file must be an object\n    invariant(typeof file === 'object', 'Invalid parameter in file, need either Uint8Array, string or a parameter object');\n    invariant(isParameterObject(file), 'Invalid parameter object: need either .data, .range or .url');\n    // File .url is a string\n    if ('url' in file && typeof file.url === 'string') {\n      if (isDataURI(file.url)) {\n        const {\n            url\n          } = file,\n          otherParams = __rest(file, [\"url\"]);\n        const fileByteString = dataURItoByteString(url);\n        return Object.assign({\n          data: fileByteString\n        }, otherParams);\n      }\n      displayCORSWarning();\n    }\n    return file;\n  }), [file]);\n  useEffect(() => {\n    const cancellable = makeCancellable(findDocumentSource());\n    cancellable.promise.then(nextSource => {\n      sourceDispatch({\n        type: 'RESOLVE',\n        value: nextSource\n      });\n    }).catch(error => {\n      sourceDispatch({\n        type: 'REJECT',\n        error\n      });\n    });\n    return () => {\n      cancelRunningTask(cancellable);\n    };\n  }, [findDocumentSource, sourceDispatch]);\n  // biome-ignore lint/correctness/useExhaustiveDependencies: Ommitted callbacks so they are not called every time they change\n  useEffect(() => {\n    if (typeof source === 'undefined') {\n      return;\n    }\n    if (source === false) {\n      onSourceError();\n      return;\n    }\n    onSourceSuccess();\n  }, [source]);\n  /**\n   * Called when a document is read successfully\n   */\n  function onLoadSuccess() {\n    if (!pdf) {\n      // Impossible, but TypeScript doesn't know that\n      return;\n    }\n    if (onLoadSuccessProps) {\n      onLoadSuccessProps(pdf);\n    }\n    pages.current = new Array(pdf.numPages);\n    linkService.current.setDocument(pdf);\n  }\n  /**\n   * Called when a document failed to read successfully\n   */\n  function onLoadError() {\n    if (!pdfError) {\n      // Impossible, but TypeScript doesn't know that\n      return;\n    }\n    warning(false, pdfError.toString());\n    if (onLoadErrorProps) {\n      onLoadErrorProps(pdfError);\n    }\n  }\n  // biome-ignore lint/correctness/useExhaustiveDependencies: useEffect intentionally triggered on source change\n  useEffect(function resetDocument() {\n    pdfDispatch({\n      type: 'RESET'\n    });\n  }, [pdfDispatch, source]);\n  // biome-ignore lint/correctness/useExhaustiveDependencies: Ommitted callbacks so they are not called every time they change\n  useEffect(function loadDocument() {\n    if (!source) {\n      return;\n    }\n    const documentInitParams = options ? Object.assign(Object.assign({}, source), options) : source;\n    const destroyable = pdfjs.getDocument(documentInitParams);\n    if (onLoadProgress) {\n      destroyable.onProgress = onLoadProgress;\n    }\n    if (onPassword) {\n      destroyable.onPassword = onPassword;\n    }\n    const loadingTask = destroyable;\n    const loadingPromise = loadingTask.promise.then(nextPdf => {\n      pdfDispatch({\n        type: 'RESOLVE',\n        value: nextPdf\n      });\n    }).catch(error => {\n      if (loadingTask.destroyed) {\n        return;\n      }\n      pdfDispatch({\n        type: 'REJECT',\n        error\n      });\n    });\n    return () => {\n      loadingPromise.finally(() => loadingTask.destroy());\n    };\n  }, [options, pdfDispatch, source]);\n  // biome-ignore lint/correctness/useExhaustiveDependencies: Ommitted callbacks so they are not called every time they change\n  useEffect(() => {\n    if (typeof pdf === 'undefined') {\n      return;\n    }\n    if (pdf === false) {\n      onLoadError();\n      return;\n    }\n    onLoadSuccess();\n  }, [pdf]);\n  useEffect(function setupLinkService() {\n    linkService.current.setViewer(viewer.current);\n    linkService.current.setExternalLinkRel(externalLinkRel);\n    linkService.current.setExternalLinkTarget(externalLinkTarget);\n  }, [externalLinkRel, externalLinkTarget]);\n  const registerPage = useCallback((pageIndex, ref) => {\n    pages.current[pageIndex] = ref;\n  }, []);\n  const unregisterPage = useCallback(pageIndex => {\n    delete pages.current[pageIndex];\n  }, []);\n  const childContext = useMemo(() => ({\n    imageResourcesPath,\n    linkService: linkService.current,\n    onItemClick,\n    pdf,\n    registerPage,\n    renderMode,\n    rotate,\n    unregisterPage\n  }), [imageResourcesPath, onItemClick, pdf, registerPage, renderMode, rotate, unregisterPage]);\n  const eventProps = useMemo(() => makeEventProps(otherProps, () => pdf),\n  // biome-ignore lint/correctness/useExhaustiveDependencies: FIXME\n  [otherProps, pdf]);\n  function renderChildren() {\n    return _jsx(DocumentContext.Provider, {\n      value: childContext,\n      children: children\n    });\n  }\n  function renderContent() {\n    if (!file) {\n      return _jsx(Message, {\n        type: \"no-data\",\n        children: typeof noData === 'function' ? noData() : noData\n      });\n    }\n    if (pdf === undefined || pdf === null) {\n      return _jsx(Message, {\n        type: \"loading\",\n        children: typeof loading === 'function' ? loading() : loading\n      });\n    }\n    if (pdf === false) {\n      return _jsx(Message, {\n        type: \"error\",\n        children: typeof error === 'function' ? error() : error\n      });\n    }\n    return renderChildren();\n  }\n  return _jsx(\"div\", Object.assign({\n    className: clsx('react-pdf__Document', className),\n    // Assertion is needed for React 18 compatibility\n    ref: inputRef,\n    style: {\n      ['--scale-factor']: '1'\n    }\n  }, eventProps, {\n    children: renderContent()\n  }));\n});\nexport default Document;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__rest","s","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","jsx","_jsx","forwardRef","useCallback","useEffect","useImperativeHandle","useMemo","useRef","makeEventProps","makeCancellable","clsx","invariant","warning","dequal","pdfjs","DocumentContext","Message","LinkService","PasswordResponses","cancelRunningTask","dataURItoByteString","displayCORSWarning","isArrayBuffer","isBlob","isBrowser","isDataURI","loadFromFile","useResolver","PDFDataRangeTransport","defaultOnPassword","callback","reason","NEED_PASSWORD","password","prompt","INCORRECT_PASSWORD","isParameterObject","file","Document","_a","ref","children","className","error","externalLinkRel","externalLinkTarget","inputRef","imageResourcesPath","loading","noData","onItemClick","onLoadError","onLoadErrorProps","onLoadProgress","onLoadSuccess","onLoadSuccessProps","onPassword","onSourceError","onSourceErrorProps","onSourceSuccess","onSourceSuccessProps","options","renderMode","rotate","otherProps","sourceState","sourceDispatch","source","sourceError","pdfState","pdfDispatch","pdf","pdfError","linkService","pages","prevFile","undefined","prevOptions","current","viewer","scrollPageIntoView","args","dest","pageNumber","pageIndex","page","scrollIntoView","toString","resetSource","type","findDocumentSource","fileByteString","data","url","range","otherParams","assign","cancellable","promise","nextSource","catch","Array","numPages","setDocument","resetDocument","loadDocument","documentInitParams","destroyable","getDocument","onProgress","loadingTask","loadingPromise","nextPdf","destroyed","finally","destroy","setupLinkService","setViewer","setExternalLinkRel","setExternalLinkTarget","registerPage","unregisterPage","childContext","eventProps","renderChildren","Provider","renderContent","style"],"sources":["/Users/marcvidal/Documents/Code/Portfolio/node_modules/react-pdf/dist/esm/Document.js"],"sourcesContent":["'use client';\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport makeEventProps from 'make-event-props';\nimport makeCancellable from 'make-cancellable-promise';\nimport clsx from 'clsx';\nimport invariant from 'tiny-invariant';\nimport warning from 'warning';\nimport { dequal } from 'dequal';\nimport * as pdfjs from 'pdfjs-dist';\nimport DocumentContext from './DocumentContext.js';\nimport Message from './Message.js';\nimport LinkService from './LinkService.js';\nimport PasswordResponses from './PasswordResponses.js';\nimport { cancelRunningTask, dataURItoByteString, displayCORSWarning, isArrayBuffer, isBlob, isBrowser, isDataURI, loadFromFile, } from './shared/utils.js';\nimport useResolver from './shared/hooks/useResolver.js';\nconst { PDFDataRangeTransport } = pdfjs;\nconst defaultOnPassword = (callback, reason) => {\n    switch (reason) {\n        case PasswordResponses.NEED_PASSWORD: {\n            const password = prompt('Enter the password to open this PDF file.');\n            callback(password);\n            break;\n        }\n        case PasswordResponses.INCORRECT_PASSWORD: {\n            const password = prompt('Invalid password. Please try again.');\n            callback(password);\n            break;\n        }\n        default:\n    }\n};\nfunction isParameterObject(file) {\n    return (typeof file === 'object' &&\n        file !== null &&\n        ('data' in file || 'range' in file || 'url' in file));\n}\n/**\n * Loads a document passed using `file` prop.\n */\nconst Document = forwardRef(function Document(_a, ref) {\n    var { children, className, error = 'Failed to load PDF file.', externalLinkRel, externalLinkTarget, file, inputRef, imageResourcesPath, loading = 'Loading PDFâ€¦', noData = 'No PDF file specified.', onItemClick, onLoadError: onLoadErrorProps, onLoadProgress, onLoadSuccess: onLoadSuccessProps, onPassword = defaultOnPassword, onSourceError: onSourceErrorProps, onSourceSuccess: onSourceSuccessProps, options, renderMode, rotate } = _a, otherProps = __rest(_a, [\"children\", \"className\", \"error\", \"externalLinkRel\", \"externalLinkTarget\", \"file\", \"inputRef\", \"imageResourcesPath\", \"loading\", \"noData\", \"onItemClick\", \"onLoadError\", \"onLoadProgress\", \"onLoadSuccess\", \"onPassword\", \"onSourceError\", \"onSourceSuccess\", \"options\", \"renderMode\", \"rotate\"]);\n    const [sourceState, sourceDispatch] = useResolver();\n    const { value: source, error: sourceError } = sourceState;\n    const [pdfState, pdfDispatch] = useResolver();\n    const { value: pdf, error: pdfError } = pdfState;\n    const linkService = useRef(new LinkService());\n    const pages = useRef([]);\n    const prevFile = useRef(undefined);\n    const prevOptions = useRef(undefined);\n    if (file && file !== prevFile.current && isParameterObject(file)) {\n        warning(!dequal(file, prevFile.current), `File prop passed to <Document /> changed, but it's equal to previous one. This might result in unnecessary reloads. Consider memoizing the value passed to \"file\" prop.`);\n        prevFile.current = file;\n    }\n    // Detect non-memoized changes in options prop\n    if (options && options !== prevOptions.current) {\n        warning(!dequal(options, prevOptions.current), `Options prop passed to <Document /> changed, but it's equal to previous one. This might result in unnecessary reloads. Consider memoizing the value passed to \"options\" prop.`);\n        prevOptions.current = options;\n    }\n    const viewer = useRef({\n        // Handling jumping to internal links target\n        scrollPageIntoView: (args) => {\n            const { dest, pageNumber, pageIndex = pageNumber - 1 } = args;\n            // First, check if custom handling of onItemClick was provided\n            if (onItemClick) {\n                onItemClick({ dest, pageIndex, pageNumber });\n                return;\n            }\n            // If not, try to look for target page within the <Document>.\n            const page = pages.current[pageIndex];\n            if (page) {\n                // Scroll to the page automatically\n                page.scrollIntoView();\n                return;\n            }\n            warning(false, `An internal link leading to page ${pageNumber} was clicked, but neither <Document> was provided with onItemClick nor it was able to find the page within itself. Either provide onItemClick to <Document> and handle navigating by yourself or ensure that all pages are rendered within <Document>.`);\n        },\n    });\n    useImperativeHandle(ref, () => ({\n        linkService,\n        pages,\n        viewer,\n    }), []);\n    /**\n     * Called when a document source is resolved correctly\n     */\n    function onSourceSuccess() {\n        if (onSourceSuccessProps) {\n            onSourceSuccessProps();\n        }\n    }\n    /**\n     * Called when a document source failed to be resolved correctly\n     */\n    function onSourceError() {\n        if (!sourceError) {\n            // Impossible, but TypeScript doesn't know that\n            return;\n        }\n        warning(false, sourceError.toString());\n        if (onSourceErrorProps) {\n            onSourceErrorProps(sourceError);\n        }\n    }\n    function resetSource() {\n        sourceDispatch({ type: 'RESET' });\n    }\n    // biome-ignore lint/correctness/useExhaustiveDependencies: See https://github.com/biomejs/biome/issues/3080\n    useEffect(resetSource, [file, sourceDispatch]);\n    const findDocumentSource = useCallback(() => __awaiter(this, void 0, void 0, function* () {\n        if (!file) {\n            return null;\n        }\n        // File is a string\n        if (typeof file === 'string') {\n            if (isDataURI(file)) {\n                const fileByteString = dataURItoByteString(file);\n                return { data: fileByteString };\n            }\n            displayCORSWarning();\n            return { url: file };\n        }\n        // File is PDFDataRangeTransport\n        if (file instanceof PDFDataRangeTransport) {\n            return { range: file };\n        }\n        // File is an ArrayBuffer\n        if (isArrayBuffer(file)) {\n            return { data: file };\n        }\n        /**\n         * The cases below are browser-only.\n         * If you're running on a non-browser environment, these cases will be of no use.\n         */\n        if (isBrowser) {\n            // File is a Blob\n            if (isBlob(file)) {\n                const data = yield loadFromFile(file);\n                return { data };\n            }\n        }\n        // At this point, file must be an object\n        invariant(typeof file === 'object', 'Invalid parameter in file, need either Uint8Array, string or a parameter object');\n        invariant(isParameterObject(file), 'Invalid parameter object: need either .data, .range or .url');\n        // File .url is a string\n        if ('url' in file && typeof file.url === 'string') {\n            if (isDataURI(file.url)) {\n                const { url } = file, otherParams = __rest(file, [\"url\"]);\n                const fileByteString = dataURItoByteString(url);\n                return Object.assign({ data: fileByteString }, otherParams);\n            }\n            displayCORSWarning();\n        }\n        return file;\n    }), [file]);\n    useEffect(() => {\n        const cancellable = makeCancellable(findDocumentSource());\n        cancellable.promise\n            .then((nextSource) => {\n            sourceDispatch({ type: 'RESOLVE', value: nextSource });\n        })\n            .catch((error) => {\n            sourceDispatch({ type: 'REJECT', error });\n        });\n        return () => {\n            cancelRunningTask(cancellable);\n        };\n    }, [findDocumentSource, sourceDispatch]);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: Ommitted callbacks so they are not called every time they change\n    useEffect(() => {\n        if (typeof source === 'undefined') {\n            return;\n        }\n        if (source === false) {\n            onSourceError();\n            return;\n        }\n        onSourceSuccess();\n    }, [source]);\n    /**\n     * Called when a document is read successfully\n     */\n    function onLoadSuccess() {\n        if (!pdf) {\n            // Impossible, but TypeScript doesn't know that\n            return;\n        }\n        if (onLoadSuccessProps) {\n            onLoadSuccessProps(pdf);\n        }\n        pages.current = new Array(pdf.numPages);\n        linkService.current.setDocument(pdf);\n    }\n    /**\n     * Called when a document failed to read successfully\n     */\n    function onLoadError() {\n        if (!pdfError) {\n            // Impossible, but TypeScript doesn't know that\n            return;\n        }\n        warning(false, pdfError.toString());\n        if (onLoadErrorProps) {\n            onLoadErrorProps(pdfError);\n        }\n    }\n    // biome-ignore lint/correctness/useExhaustiveDependencies: useEffect intentionally triggered on source change\n    useEffect(function resetDocument() {\n        pdfDispatch({ type: 'RESET' });\n    }, [pdfDispatch, source]);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: Ommitted callbacks so they are not called every time they change\n    useEffect(function loadDocument() {\n        if (!source) {\n            return;\n        }\n        const documentInitParams = options\n            ? Object.assign(Object.assign({}, source), options) : source;\n        const destroyable = pdfjs.getDocument(documentInitParams);\n        if (onLoadProgress) {\n            destroyable.onProgress = onLoadProgress;\n        }\n        if (onPassword) {\n            destroyable.onPassword = onPassword;\n        }\n        const loadingTask = destroyable;\n        const loadingPromise = loadingTask.promise\n            .then((nextPdf) => {\n            pdfDispatch({ type: 'RESOLVE', value: nextPdf });\n        })\n            .catch((error) => {\n            if (loadingTask.destroyed) {\n                return;\n            }\n            pdfDispatch({ type: 'REJECT', error });\n        });\n        return () => {\n            loadingPromise.finally(() => loadingTask.destroy());\n        };\n    }, [options, pdfDispatch, source]);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: Ommitted callbacks so they are not called every time they change\n    useEffect(() => {\n        if (typeof pdf === 'undefined') {\n            return;\n        }\n        if (pdf === false) {\n            onLoadError();\n            return;\n        }\n        onLoadSuccess();\n    }, [pdf]);\n    useEffect(function setupLinkService() {\n        linkService.current.setViewer(viewer.current);\n        linkService.current.setExternalLinkRel(externalLinkRel);\n        linkService.current.setExternalLinkTarget(externalLinkTarget);\n    }, [externalLinkRel, externalLinkTarget]);\n    const registerPage = useCallback((pageIndex, ref) => {\n        pages.current[pageIndex] = ref;\n    }, []);\n    const unregisterPage = useCallback((pageIndex) => {\n        delete pages.current[pageIndex];\n    }, []);\n    const childContext = useMemo(() => ({\n        imageResourcesPath,\n        linkService: linkService.current,\n        onItemClick,\n        pdf,\n        registerPage,\n        renderMode,\n        rotate,\n        unregisterPage,\n    }), [imageResourcesPath, onItemClick, pdf, registerPage, renderMode, rotate, unregisterPage]);\n    const eventProps = useMemo(() => makeEventProps(otherProps, () => pdf), \n    // biome-ignore lint/correctness/useExhaustiveDependencies: FIXME\n    [otherProps, pdf]);\n    function renderChildren() {\n        return _jsx(DocumentContext.Provider, { value: childContext, children: children });\n    }\n    function renderContent() {\n        if (!file) {\n            return _jsx(Message, { type: \"no-data\", children: typeof noData === 'function' ? noData() : noData });\n        }\n        if (pdf === undefined || pdf === null) {\n            return (_jsx(Message, { type: \"loading\", children: typeof loading === 'function' ? loading() : loading }));\n        }\n        if (pdf === false) {\n            return _jsx(Message, { type: \"error\", children: typeof error === 'function' ? error() : error });\n        }\n        return renderChildren();\n    }\n    return (_jsx(\"div\", Object.assign({ className: clsx('react-pdf__Document', className), \n        // Assertion is needed for React 18 compatibility\n        ref: inputRef, style: {\n            ['--scale-factor']: '1',\n        } }, eventProps, { children: renderContent() })));\n});\nexport default Document;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}